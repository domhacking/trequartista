{"version":3,"sources":["app.css","_settings.typography.scss","../../node_modules/inuit-defaults/_settings.defaults.scss","../../node_modules/inuit-normalize/_generic.normalize.scss","../../node_modules/inuit-reset/_generic.reset.scss","../../node_modules/inuit-box-sizing/_generic.box-sizing.scss","../../node_modules/inuit-shared/_generic.shared.scss","../../node_modules/inuit-page/_base.page.scss","_settings.color.scss","../../node_modules/inuit-paragraphs/_base.paragraphs.scss","../../node_modules/inuit-mixins/_tools.mixins.scss","../../node_modules/inuit-headings/_base.headings.scss","../../node_modules/inuit-images/_base.images.scss","../../node_modules/inuit-lists/_base.lists.scss","_base.page.scss","../../node_modules/inuit-layout/_objects.layout.scss","../../node_modules/inuit-pack/_objects.pack.scss","../../node_modules/inuit-media/_objects.media.scss","../../node_modules/inuit-flag/_objects.flag.scss","../../node_modules/inuit-list-bare/_objects.list-bare.scss","_homepage.scss","module/index.scss","module/footer.scss","_tools.module.scss","module/nav.scss","module/post.scss","../../node_modules/inuit-spacing/_trumps.spacing.scss","../../node_modules/inuit-responsive-spacing/_trumps.spacing-responsive.scss","../../node_modules/inuit-widths/_trumps.widths.scss","../../node_modules/inuit-tools-widths/_tools.widths.scss","../../node_modules/inuit-responsive-widths/_trumps.widths-responsive.scss","../../node_modules/inuit-responsive-tools/_tools.responsive.scss","../../node_modules/inuit-clearfix/_trumps.clearfix.scss"],"names":[],"mappings":"AAAA,iBAAiB;ACkBjB;EACE,oCAPmC;EAQnC,8CAAQ;EACR,6QAAqQ;EACrQ,oBAAoB;EACpB,mBAAmB,EAAA;;AAGrB;EACI,oBAAoB;EACpB,oCAhBiC,EAiBpC;;AAGD;EACI,sBAAsB;EACtB,eAAe,EAClB;;ACnCD;;;;GAIG;ACJH,4EAA4E;AAE5E;;;;GAIG;AAEH;EACE,wBAAwB;EAAE,OAAO;EACjC,2BAA2B;EAAE,OAAO;EACpC,+BAA+B;EAAE,OAAO,EACzC;;AAED;;GAEG;AAEH;EACE,UAAU,EACX;;AAED;gFACgF;AAEhF;;;;;GAKG;AAEH;;;;;;;;;;;;;EAaE,eAAe,EAChB;;AAED;;;GAGG;AAEH;;;;EAIE,sBAAsB;EAAE,OAAO;EAC/B,yBAAyB;EAAE,OAAO,EACnC;;AAED;;;GAGG;AAEH;EACE,cAAc;EACd,UAAU,EACX;;AAED;;;GAGG;AHeH;;EGXE,cAAc,EACf;;AAED;gFACgF;AAEhF;;GAEG;AAEH;EACE,8BAA8B,EAC/B;;AAED;;;GAGG;AAEH;;EAEE,WAAW,EACZ;;AAED;gFACgF;AAEhF;;GAEG;AAEH;EACE,0BAA0B,EAC3B;;AAED;;GAEG;AAEH;;EAEE,kBAAkB,EACnB;;AAED;;GAEG;AAEH;EACE,mBAAmB,EACpB;;AAED;;;GAGG;AAEH;EACE,eAAe;EACf,iBAAiB,EAClB;;AAED;;GAEG;AAEH;EACE,iBAAiB;EACjB,YAAY,EACb;;AAED;;GAEG;AAEH;EACE,eAAe,EAChB;;AAED;;GAEG;AAEH;;EAEE,eAAe;EACf,eAAe;EACf,mBAAmB;EACnB,yBAAyB,EAC1B;;AAED;EACE,YAAY,EACb;;AAED;EACE,gBAAgB,EACjB;;AAED;gFACgF;AAEhF;;GAEG;AAEH;EACE,UAAU,EACX;;AAED;;GAEG;AAEH;EACE,iBAAiB,EAClB;;AAED;gFACgF;AAEhF;;GAEG;AAEH;EACE,iBAAiB,EAClB;;AAED;;GAEG;AAEH;EACE,wBAAwB;EACxB,UAAU,EACX;;AAED;;GAEG;AAEH;EACE,eAAe,EAChB;;AAED;;GAEG;AAEH;;;;EAIE,kCAAkC;EAClC,eAAe,EAChB;;AAED;gFACgF;AAEhF;;;GAGG;AAEH;;;;;GAKG;AAEH;;;;;EAKE,eAAe;EAAE,OAAO;EACxB,cAAc;EAAE,OAAO;EACvB,UAAU;EAAE,OAAO,EACpB;;AAED;;GAEG;AAEH;EACE,kBAAkB,EACnB;;AAED;;;;;GAKG;AAEH;;EAEE,qBAAqB,EACtB;;AAED;;;;;;GAMG;AAEH;;;;EAIE,2BAA2B;EAAE,OAAO;EACpC,gBAAgB;EAAE,OAAO,EAC1B;;AAED;;GAEG;AAEH;;EAEE,gBAAgB,EACjB;;AAED;;GAEG;AAEH;;EAEE,UAAU;EACV,WAAW,EACZ;;AAED;;;GAGG;AAEH;EACE,oBAAoB,EACrB;;AAED;;;;;;GAMG;AAEH;;EAEE,uBAAuB;EAAE,OAAO;EAChC,WAAW;EAAE,OAAO,EACrB;;AAED;;;;GAIG;AAEH;;EAEE,aAAa,EACd;;AAED;;;GAGG;AAEH;EACE,8BAA8B;EAAE,OAAO;EACvC,wBAAwB;EAAE,OAAO,EAClC;;AAED;;;;GAIG;AAEH;;EAEE,yBAAyB,EAC1B;;AAED;;GAEG;AAEH;EACE,0BAA0B;EAC1B,cAAc;EACd,+BAA+B,EAChC;;AAED;;;GAGG;AAEH;EACE,UAAU;EAAE,OAAO;EACnB,WAAW;EAAE,OAAO,EACrB;;AAED;;GAEG;AAEH;EACE,eAAe,EAChB;;AAED;;;GAGG;AAEH;EACE,kBAAkB,EACnB;;AAED;gFACgF;AAEhF;;GAEG;AAEH;EACE,0BAA0B;EAC1B,kBAAkB,EACnB;;AAED;;EAEE,WAAW,EACZ;;ACvaD;wCAEwC;AAExC;;;GAGG;AACH;;;;;;;;EAQI,UAAW;EACX,WAAW,EACd;;AAMD;;GAEG;AACH;;EAEI,aAAa,EAChB;;AAMD;;GAEG;AACH;;EAEI,sBAAsB,EACzB;;AAMD;;GAEG;AACH;EACI,yBAAyB,EAC5B;;ACrDD;wCAEwC;AAExC;;;;;GAKG;AACH;EAGY,uBAAuB,EAClC;;AAED;EAOgB,oBAAoB,EAC3B;;ACxBT;wCAEwC;AAExC;;;;GAIG;AACH;;;;;;;EAQI,oBLFmB;EKGnB,sBAAwC,EAC3C;;AAMD;;;GAGG;AACH;EAEI,kBAAc;EACd,kBAAe,EAClB;;ACjCD;wCAEwC;AAExC;;;;;;;;;;;;;GAaG;AACH;EACI,eAAiC;EAAgB,SAAS;EAC1D,iBAAoC;EAA0B,SAAS;EACvE,0BCfsB;EDgBtB,eCdsB;EDetB,mBAAmB;EAAE,SAAS;EAC9B,iBAAiB;EAAE,SAAS;EAC5B,+BAA+B;EAAE,SAAS;EACtC,2BAA2B;EAAE,SAAS;EAC1C,mCAAmC;EAAE,SAAS;EAC7C,oCAAoC;EAAE,SAAS,EACnD;;AE7BD;wCAEwC;AAExC;;;GAGG;AAKH;EC6CI,gBD5C8C;EC6C9C,oBAA4B;EAGxB,qBAAiB,ED/CxB;;AEdD;wCAEwC;AAExC;;GAEG;AAUH;EDyCI,gBChDwB;EDiDxB,mBAA4B;EAGxB,qBAAiB,EC3CxB;;AAED;EDqCI,gBC/CwB;EDgDxB,oBAA4B;EAGxB,iBAAiB,ECvCxB;;AAED;EDiCI,gBC9CwB;ED+CxB,kBAA4B;EAGxB,eAAiB,ECnCxB;;AAED;ED6BI,gBC7CwB;ED8CxB,mBAA4B;EAGxB,iBAAiB,EC/BxB;;AAED;EDyBI,gBC5CwB;ED6CxB,gBAA4B;EAGxB,iBAAiB,EC3BxB;;AAED;EDqBI,gBC3CwB;ED4CxB,oBAA4B;EAGxB,qBAAiB,ECvBxB;;ACtCD;wCAEwC;AAExC;;;;;;GAMG;AACH;EACI,gBAAgB;EAAE,SAAS;EAC3B,mBAAmB;EAAE,SAAS;EAC9B,uBAAuB;EAAE,SAAS,EACrC;;AAID;;;;;GAKG;AACH;;;EAEe,SAAS;EACpB,gBAAgB,EACnB;;AC7BD;wCAEwC;AAExC;;GAEG;AACH;;EAIQ,iBAAiB,EACpB;;ACZL;EACI,YAAY;EACZ,iBAAiB;EACjB,aAAa;EAGb,6DAA2B,EAC9B;;ACPD;wCAEwC;AAExC;;;;;GAKG;AAoCH;;GAEG;AACH;EACI,iBAAiB;EACjB,UAAW;EACX,WAAW;EACX,mBdrCmB,EcsCtB;;AAEG;;;;;;OAMG;AACH;EACI,sBAAsB;EAAE,SAAS;EACjC,mBdjDe;EciDqB,SAAS;EAC7C,oBAAoB;EAAE,SAAS;EAC/B,YAAY;EAAE,SAAS,EAQ1B;;AC1EL;wCAEwC;AAExC;;;GAGG;AAwBH;;;GAGG;AACH;EACI,YAAY;EAAE,SAAS;EACvB,eAAe;EACf,oBAAoB;EAAE,SAAS,EAClC;;AAEG;;OAEG;AACH;EACI,oBAAoB,EA0BvB;;ACvEL;wCAEwC;AAExC;;;GAGG;AAwBH;EAEI,eAAe,EAClB;;AAEG;EACI,YAAY;EACZ,mBhBvBe,EgB6BlB;EARD;IAKQ,eAAe,EAClB;;AAIL;EACI,iBAAiB;EACjB,eAAe,EAOlB;EATD;;IAMQ,iBAAiB,EACpB;;ACrDT;wCAEwC;AAExC;;;;GAIG;AA0BH;;;;GAIG;AACH;EACI,eAAe;EAAE,SAAS;EAC1B,YAAY;EAAE,SAAS,EAC1B;;AAEG;;;;OAIG;AACH;;EACI,oBAAoB;EACpB,uBAAuB;EAAE,SAAS,EACrC;;AAED;;OAEG;AACH;EACI,oBjB3Ce,EiBkDlB;EARD;IAIQ,eAAe;IACf,gBAAgB,EACnB;;AAIL;;;;OAIG;AACH;EACI,YAAY;EAAE,SAAS,EAO1B;EARD;;IAKQ,iBAAiB,EACpB;;AC9ET;wCAEwC;AAExC;;GAEG;AAKH;EACI,UAAW;EACX,WAAW;EACX,iBAAiB,EACpB;;ACfD;EACI,gBAAgB;EAChB,sBAAsB;EACtB,gBAAgB,EACnB;;ACJD,kBAAkB;ACAlB;;;;EAIE;ACcA;EDVE,eAAe;EACf,WAAW,ECeZ;EDbC;IACI,WAAW;IACX,YAAY,EACf;EAED;IACI,WAAW;IACX,aAAa;IACb,oBAAoB,EACvB;EAED;IACI,gBAAgB;IAChB,edZM;IcaN,mBAAmB;IACnB,eAAe,EAClB;;AE3BL;;;;EAIE;ADcA;ECVE,gBAAgB;EAChB,YAAY;EACZ,UAAU,EDcX;EAND;ICLM,iBAAiB;IACjB,ehBRkB;IgBSlB,kBAAkB,EAOrB;IDJH;MCAU,ehBZc;MgBad,sBAAqB,EAExB;;ACrBT;;;;EAIE;AFcA;EEVE,WAAW;EACX,eAAe;EACf,mBAAmB;EAKnB,iBAAiB,EFSlB;EAND;IEAM,uBAAuB;IACvB,gBAAgB;IAChB,ejBRM,EiBST;EFHH;IEMM,mBAAmB;IACnB,oBAAoB,EACvB;EFRH;IEWM,YAAY;IACZ,aAAa;IACb,gBAAgB,EACnB;EFdH;IEiBM,mBAAmB;IACnB,aAAa;IACb,WAAW;IACX,ejBhCkB;IiBiClB,0BjB9BuB;IiB+BvB,eAAe;IACf,cAAc;IACd,iCAAqB;QAArB,6BAAqB;IACrB,8BAA8B,EACjC;EF1BH;IE6BM,6BAAqB;QAArB,yBAAqB,EACxB;EF9BH;IEkCM,yCAAqB;IACrB,mBAAmB;IACnB,yBAAyB;IACzB,YAAY;IACZ,UAAU;IACV,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,oCACH,EAAC;EF3CJ;IE8CM,6BAAiB;QAAjB,yBAAiB,EACpB;EF/CH;IEkDM,mBAAmB,EACtB;EFnDH;IEsDM,mBAAmB;IACnB,aAAa,EAEhB;EFzDH;IE4DM,wBAAwB;IACxB,aAAa;IACb,YAAY,EACf;EF/DH;IEmEM,gBAAgB;IAChB,cAAc;IACd,aAAa;IACb,YAAY;IACZ,qCAAsB;IACtB,OAAO;IACP,QAAQ,EACX;;AC5FL;wCAEwC;AAExC;;;;;GAKG;ACTH;wCAEwC;AAExC;;;;;GAKG;ACTH;wCAEwC;AAExC;;;;;;GAMG;ACuBS;EACI,uBAAuB,EAC1B;;AAQG;EACI,sBAA8E,EACjF;;AAFD;EACI,4BAA8E,EACjF;;AAFD;EACI,4BAA8E,EACjF;;AAFD;EACI,sBAA8E,EACjF;;AAFD;EACI,sBAA8E,EACjF;;AAFD;EACI,sBAA8E,EACjF;;AAFD;EACI,sBAA8E,EACjF;;AAFD;EACI,sBAA8E,EACjF;;AAFD;EACI,sBAA8E,EACjF;;AAFD;EACI,sBAA8E,EACjF;;AC7CjB;wCAEwC;AAExC;;GAEG;AC4CS;EFjBA;IACI,uBAAuB,EAC1B;EAQG;IACI,sBAA8E,EACjF;EAFD;IACI,4BAA8E,EACjF;EAFD;IACI,4BAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF,EAAA;;AEKL;EFjBA;IACI,uBAAuB,EAC1B;EAQG;IACI,sBAA8E,EACjF;EAFD;IACI,4BAA8E,EACjF;EAFD;IACI,4BAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF,EAAA;;AEKL;EFjBA;IACI,uBAAuB,EAC1B;EAQG;IACI,sBAA8E,EACjF;EAFD;IACI,4BAA8E,EACjF;EAFD;IACI,4BAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF,EAAA;;AEKL;EFjBA;IACI,uBAAuB,EAC1B;EAQG;IACI,sBAA8E,EACjF;EAFD;IACI,4BAA8E,EACjF;EAFD;IACI,4BAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF,EAAA;;AEKL;EFjBA;IACI,uBAAuB,EAC1B;EAQG;IACI,sBAA8E,EACjF;EAFD;IACI,4BAA8E,EACjF;EAFD;IACI,4BAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF,EAAA;;AEKL;EFjBA;IACI,uBAAuB,EAC1B;EAQG;IACI,sBAA8E,EACjF;EAFD;IACI,4BAA8E,EACjF;EAFD;IACI,4BAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF;EAFD;IACI,sBAA8E,EACjF,EAAA;;AG7CjB;wCAEwC;AAExC;;;;GAIG;AACH;;EAIQ,YAAY;EACZ,eAAe;EACf,YAAY,EACf;;AhC0gCL,yprBAAyprB","file":"app.css","sourceRoot":"/source/","sourcesContent":[null,"///////////////////////////////////////////////////////////////////////////////\n// # _settings.typography.scss\n//\n// You can override any typography inuitcss settings here.\n// For example, if you want to change the size of the h1 heading:\n// $inuit-heading-size-1: 48px;\n//\n// Read more avaiable properties:\n// https://github.com/inuitcss/base.headings/blob/master/_base.headings.scss\n///////////////////////////////////////////////////////////////////////////////\n$font-primary: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n$font-secondary: Georgia, serif;\n$content-font: \"SuisseBPIntl-Regular\";\n\n$font-size: 16px;\n$font-line-height: 24px;\n\n\n@font-face {\n  font-family: $content-font;\n  src: url(\"../fonts/SuisseBPIntl-Regular.eot\");\n  src: url(\"../fonts/SuisseBPIntl-Regular.eot?#iefix\") format(\"embedded-opentype\"), url(\"../fonts/SuisseBPIntl-Regular.woff\") format(\"woff\"), url(\"../fonts/SuisseBPIntl-Regular.ttf\") format(\"truetype\"), url(\"../fonts/SuisseBPIntl-Regular.svg#fs_joeylight\") format(\"svg\");\n  font-weight: normal;\n  font-style: normal;\n}\n\nh1,h2,h3,h4{\n    font-weight: normal;\n    font-family: $content-font;\n}\n\n\na{\n    text-decoration: none;\n    color: inherit;\n}\n","/*!\n * inuitcss, by @csswizardry\n *\n * github.com/inuitcss | inuitcss.com\n */\n///*------------------------------------*\\\n//    #DEFAULTS\n//\\*------------------------------------*/\n\n// These variables are inuitcss’ defaults; they should not be modified or\n// adjusted directly; you should predefine the variables in your own project.\n\n\n\n\n\n// High-level base settings.\n$inuit-base-font-size:          16px !default;\n$inuit-base-line-height:        24px !default;\n$inuit-base-text-color:         #333 !default;\n$inuit-base-background-color:   #fff !default;\n\n\n\n\n\n// Namespace.\n//\n// Would you like inuitcss’ classes to be prepended with a namespace? If so,\n// define it here.\n$inuit-namespace:               null !default;\n\n\n\n\n\n// These variables are framework variables, sourced from variables defined\n// above. Feel free to use these variables throughout your project, but do not\n// modify or reassign them.\n$inuit-base-spacing-unit:           $inuit-base-line-height;\n$inuit-base-spacing-unit--tiny:     round($inuit-base-spacing-unit / 4);\n$inuit-base-spacing-unit--small:    round($inuit-base-spacing-unit / 2);\n$inuit-base-spacing-unit--large:    round($inuit-base-spacing-unit * 2);\n$inuit-base-spacing-unit--huge:     round($inuit-base-spacing-unit * 4);\n","/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */\n\n/**\n * 1. Set default font family to sans-serif.\n * 2. Prevent iOS and IE text size adjust after device orientation change,\n *    without disabling user zoom.\n */\n\nhtml {\n  font-family: sans-serif; /* 1 */\n  -ms-text-size-adjust: 100%; /* 2 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/**\n * Remove default margin.\n */\n\nbody {\n  margin: 0;\n}\n\n/* HTML5 display definitions\n   ========================================================================== */\n\n/**\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\n * and Firefox.\n * Correct `block` display not defined for `main` in IE 11.\n */\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\n/**\n * 1. Correct `inline-block` display not defined in IE 8/9.\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\n */\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block; /* 1 */\n  vertical-align: baseline; /* 2 */\n}\n\n/**\n * Prevent modern browsers from displaying `audio` without controls.\n * Remove excess height in iOS 5 devices.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Address `[hidden]` styling not present in IE 8/9/10.\n * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\n */\n\n[hidden],\ntemplate {\n  display: none;\n}\n\n/* Links\n   ========================================================================== */\n\n/**\n * Remove the gray background color from active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * Improve readability of focused elements when they are also in an\n * active/hover state.\n */\n\na:active,\na:hover {\n  outline: 0;\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n */\n\nabbr[title] {\n  border-bottom: 1px dotted;\n}\n\n/**\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n */\n\nb,\nstrong {\n  font-weight: bold;\n}\n\n/**\n * Address styling not present in Safari and Chrome.\n */\n\ndfn {\n  font-style: italic;\n}\n\n/**\n * Address variable `h1` font-size and margin within `section` and `article`\n * contexts in Firefox 4+, Safari, and Chrome.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/**\n * Address styling not present in IE 8/9.\n */\n\nmark {\n  background: #ff0;\n  color: #000;\n}\n\n/**\n * Address inconsistent and variable font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -0.5em;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove border when inside `a` element in IE 8/9/10.\n */\n\nimg {\n  border: 0;\n}\n\n/**\n * Correct overflow not hidden in IE 9/10/11.\n */\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * Address margin not present in IE 8/9 and Safari.\n */\n\nfigure {\n  margin: 1em 40px;\n}\n\n/**\n * Address differences between Firefox and other browsers.\n */\n\nhr {\n  box-sizing: content-box;\n  height: 0;\n}\n\n/**\n * Contain overflow in all browsers.\n */\n\npre {\n  overflow: auto;\n}\n\n/**\n * Address odd `em`-unit font size rendering in all browsers.\n */\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\n * styling of `select`, unless a `border` property is set.\n */\n\n/**\n * 1. Correct color not being inherited.\n *    Known issue: affects color of disabled elements.\n * 2. Correct font properties not being inherited.\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit; /* 1 */\n  font: inherit; /* 2 */\n  margin: 0; /* 3 */\n}\n\n/**\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\n */\n\nbutton {\n  overflow: visible;\n}\n\n/**\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\n * All other form control elements do not inherit `text-transform` values.\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\n * Correct `select` style inheritance in Firefox.\n */\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/**\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n *    and `video` controls.\n * 2. Correct inability to style clickable `input` types in iOS.\n * 3. Improve usability and consistency of cursor style between image-type\n *    `input` and others.\n */\n\nbutton,\nhtml input[type=\"button\"], /* 1 */\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button; /* 2 */\n  cursor: pointer; /* 3 */\n}\n\n/**\n * Re-set default cursor for disabled elements.\n */\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\n/**\n * Remove inner padding and border in Firefox 4+.\n */\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\n/**\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\n * the UA stylesheet.\n */\n\ninput {\n  line-height: normal;\n}\n\n/**\n * It's recommended that you don't attempt to style these elements.\n * Firefox's implementation doesn't respect box-sizing, padding, or width.\n *\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\n * 2. Remove excess padding in IE 8/9/10.\n */\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\n * `font-size` values of the `input`, it causes the cursor style of the\n * decrement button to change from `default` to `text`.\n */\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.\n */\n\ninput[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  box-sizing: content-box; /* 2 */\n}\n\n/**\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\n * Safari (but not Chrome) clips the cancel button when the search input has\n * padding (and `textfield` appearance).\n */\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * Define consistent border, margin, and padding.\n */\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\n/**\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\n */\n\nlegend {\n  border: 0; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Remove default vertical scrollbar in IE 8/9/10/11.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * Don't inherit the `font-weight` (applied by a rule above).\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\n */\n\noptgroup {\n  font-weight: bold;\n}\n\n/* Tables\n   ========================================================================== */\n\n/**\n * Remove most spacing between table cells.\n */\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}\n","/*------------------------------------*\\\n    #RESET\n\\*------------------------------------*/\n\n/**\n * As well as using normalize.css, it is often advantageous to remove all\n * margins from certain elements.\n */\nbody,\nh1, h2, h3, h4, h5, h6,\np, blockquote, pre,\ndl, dd, ol, ul,\nform, fieldset, legend,\nfigure,\ntable, th, td, caption,\nhr {\n    margin:  0;\n    padding: 0;\n}\n\n\n\n\n\n/**\n * Give a help cursor to elements that give extra info on `:hover`.\n */\nabbr[title],\ndfn[title] {\n    cursor: help;\n}\n\n\n\n\n\n/**\n * Remove underlines from potentially troublesome elements.\n */\nu,\nins {\n    text-decoration: none;\n}\n\n\n\n\n\n/**\n * Apply faux underlines to inserted text via `border-bottom`.\n */\nins {\n    border-bottom: 1px solid;\n}\n","/*------------------------------------*\\\n    #BOX-SIZING\n\\*------------------------------------*/\n\n/**\n * Set the global `box-sizing` state to `border-box`.\n *\n * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice\n * paulirish.com/2012/box-sizing-border-box-ftw\n */\nhtml {\n    -webkit-box-sizing: border-box;\n       -moz-box-sizing: border-box;\n            box-sizing: border-box;\n}\n\n* {\n\n    &,\n    &:before,\n    &:after {\n        -webkit-box-sizing: inherit;\n           -moz-box-sizing: inherit;\n                box-sizing: inherit;\n        }\n\n}\n\n\n\n\n\n// If we have included this file, set a variable to tell the rest of the\n// framework that global `box-sizing: border-box` has been set.\n$inuit-global-border-box: true;\n","/*------------------------------------*\\\n    #SHARED\n\\*------------------------------------*/\n\n/**\n * Where `margin-bottom` is concerned,this value will be the same as the\n * base line-height. This allows us to keep a consistent vertical rhythm.\n * As per: csswizardry.com/2012/06/single-direction-margin-declarations\n */\nh1, h2, h3, h4, h5, h6,\nul, ol, dl,\nblockquote, p, address,\nhr,\ntable,\nfieldset, figure,\npre,\n%margin-bottom {\n    margin-bottom: $inuit-base-spacing-unit;\n    margin-bottom: ($inuit-base-spacing-unit / $inuit-base-font-size) * 1rem;\n}\n\n\n\n\n\n/**\n * Where `margin-left` is concerned we want to try and indent certain elements\n * by a consistent amount. Define that amount once,here.\n */\nul, ol, dd,\n%margin-left {\n    margin-left: 2 * $inuit-base-spacing-unit;\n    margin-left: (2 * $inuit-base-spacing-unit / $inuit-base-font-size) * 1rem;\n}\n","/*------------------------------------*\\\n    #PAGE\n\\*------------------------------------*/\n\n/**\n * High-, page-level styling.\n *\n * 1. Set the default `font-size` and `line-height` for the entire project,\n *    sourced from our default variables. The `font-size` is calculated to exist\n *    in ems, the `line-height` is calculated to exist unitlessly.\n * 2. Force scrollbars to always be visible to prevent awkward ‘jumps’ when\n *    navigating between pages that do/do not have enough content to produce\n *    scrollbars naturally.\n * 3. Ensure the page always fills at least the entire height of the viewport.\n * 4. Prevent certain mobile browsers from automatically zooming fonts.\n * 5. Fonts on OSX will look more consistent with other systems that do not\n *    render text using sub-pixel anti-aliasing.\n */\nhtml {\n    font-size: ($inuit-base-font-size / 16px) * 1em; /* [1] */\n    line-height: $inuit-base-line-height / $inuit-base-font-size; /* [1] */\n    background-color: $inuit-base-background-color;\n    color: $inuit-base-text-color;\n    overflow-y: scroll; /* [2] */\n    min-height: 100%; /* [3] */\n    -webkit-text-size-adjust: 100%; /* [4] */\n        -ms-text-size-adjust: 100%; /* [4] */\n    -moz-osx-font-smoothing: grayscale; /* [5] */\n     -webkit-font-smoothing: antialiased; /* [5] */\n}\n","///////////////////////////////////////////////////////////////////////////////\n// # _settings.color.scss\n//\n// Your color palette should sit here and always follow the same namespace:\n// `$color-`\n///////////////////////////////////////////////////////////////////////////////\n$color-background: #ffffff;\n$color-backgroundTwo: #e5e4e2;\n$color-foreground: #151515;\n$panel-backgroundColor: #000f26;\n\n$text-white: $color-background;\n$grey: #c9c9c9;\n","/*------------------------------------*\\\n    #PARAGRAPHS\n\\*------------------------------------*/\n\n/**\n * The `.lede` class is used to make the introductory text (usually a paragraph)\n * of a document slightly larger: en.wikipedia.org/wiki/Lede_(news)\n */\n\n// Predefine the variables below in order to alter and enable specific features.\n$inuit-lede-size:   1.125 !default;\n\n.#{$inuit-namespace}lede,\n%#{$inuit-namespace}lede {\n    @include inuit-font-size($inuit-base-font-size * $inuit-lede-size);\n}\n","///*------------------------------------*\\\n//    #MIXINS\n//\\*------------------------------------*/\n\n// inuitcss has a number of default mixins that the framework, and developers\n// working with it, can make use of.\n\n\n\n\n\n// Create a fully formed type style (sizing and vertical rhythm) by passing in a\n// single value, e.g.:\n//\n// .foo {\n//     @include inuit-font-size(12px);\n// }\n//\n// This will generate a rem-based font-size with its pixel fallback, as well as\n// a unitless line-height which will place the element on your baseline, e.g.:\n//\n// .foo {\n//     font-size: 12px;\n//     font-size: 0.75rem;\n//     line-height: 2;\n// }\n//\n// If you do not want inuitcss to generate you a line-height automatically, you\n// simply pass in your own as a second paramater:\n//\n// .foo {\n//     @include inuit-font-size(12px, 1.5);\n// }\n//\n// This will yield:\n//\n// .foo {\n//     font-size: 12px;\n//     font-size: 0.75rem;\n//     line-height: 1.5;\n// }\n//\n// This parameter can be any integer, ‘inherit’, or ‘normal’. If you don’t want\n// a line-height at all, pass in a second paramater of ‘none’ or ‘false’:\n//\n// .foo {\n//     @include inuit-font-size(12px, none);\n// }\n//\n// This will yield:\n//\n// .foo {\n//     font-size: 12px;\n//     font-size: 0.75rem;\n// }\n\n@mixin inuit-font-size($inuit-font-size, $inuit-line-height: auto) {\n    font-size: $inuit-font-size;\n    font-size: ($inuit-font-size / $inuit-base-font-size) * 1rem;\n\n    @if $inuit-line-height == auto {\n        line-height: ceil($inuit-font-size / $inuit-base-line-height) * ($inuit-base-line-height / $inuit-font-size);\n    }\n\n    @else {\n\n        @if (type-of($inuit-line-height) == number or $inuit-line-height == inherit or $inuit-line-height == normal) {\n            line-height: $inuit-line-height;\n        }\n\n        @elseif ($inuit-line-height != none and $inuit-line-height != false) {\n            @warn \"D’oh! ‘#{$inuit-line-height}’ is not a valid value for `line-height`.\"\n        }\n\n    }\n\n}\n","/*------------------------------------*\\\n    #HEADINGS\n\\*------------------------------------*/\n\n/**\n * Headings 1–6.\n */\n\n// Predefine the variables below in order to alter and enable specific features.\n$inuit-heading-size-1:  36px !default;\n$inuit-heading-size-2:  30px !default;\n$inuit-heading-size-3:  24px !default;\n$inuit-heading-size-4:  20px !default;\n$inuit-heading-size-5:  16px !default;\n$inuit-heading-size-6:  14px !default;\n\nh1 {\n    @include inuit-font-size($inuit-heading-size-1);\n}\n\nh2 {\n    @include inuit-font-size($inuit-heading-size-2);\n}\n\nh3 {\n    @include inuit-font-size($inuit-heading-size-3);\n}\n\nh4 {\n    @include inuit-font-size($inuit-heading-size-4);\n}\n\nh5 {\n    @include inuit-font-size($inuit-heading-size-5);\n}\n\nh6 {\n    @include inuit-font-size($inuit-heading-size-6);\n}\n","/*------------------------------------*\\\n    #IMAGES\n\\*------------------------------------*/\n\n/**\n * 1. Fluid images for responsive purposes.\n * 2. Offset `alt` text from surrounding copy.\n * 3. Setting `vertical-align` removes the whitespace that appears under `img`\n *    elements when they are dropped into a page as-is. Safer alternative to\n *    using `display: block;`.\n */\nimg {\n    max-width: 100%; /* [1] */\n    font-style: italic; /* [2] */\n    vertical-align: middle; /* [3] */\n}\n\n\n\n/**\n * 1. Google Maps breaks if `max-width: 100%` acts upon it; use their selector\n *    to remove the effects.\n * 2. If a `width` and/or `height` attribute have been explicitly defined, let’s\n *    not make the image fluid.\n */\n.gm-style img, /* [1] */\nimg[width], /* [2] */\nimg[height] {  /* [2] */\n    max-width: none;\n}\n","/*------------------------------------*\\\n    #LISTS\n\\*------------------------------------*/\n\n/**\n * Remove extra vertical spacing when nesting lists.\n */\nli {\n\n    > ul,\n    > ol {\n        margin-bottom: 0;\n    }\n\n}\n","html, body {\n    width: 100%;\n    min-height: 100%;\n    height: 100%;\n    background: -webkit-linear-gradient(left, #fff 65%, #e5e4e2 35%);\n    background: -o-linear-gradient(left, #fff 65%, #e5e4e2 35%);\n    background: linear-gradient(to right, #fff 65%, #e5e4e2 35%);\n}\n","/*------------------------------------*\\\n    #LAYOUT\n\\*------------------------------------*/\n\n/**\n * The inuitcss layout system uses `box-sizing: border-box;` and\n * `display: inline-block;` to create an extremely powerful, flexible\n * alternative to the traditional grid system. Combine the layout items with\n * the widths found in `trumps.widths`.\n */\n\n// Predefine the variables below in order to alter and enable specific features.\n$inuit-layout-namespace:        $inuit-namespace !default;\n\n$inuit-layout-gutter:           $inuit-base-spacing-unit !default;\n$inuit-layout-gutter--tiny:       quarter($inuit-layout-gutter) !default;\n$inuit-layout-gutter--small:        halve($inuit-layout-gutter) !default;\n$inuit-layout-gutter--large:       double($inuit-layout-gutter) !default;\n$inuit-layout-gutter--huge:     quadruple($inuit-layout-gutter) !default;\n\n$inuit-enable-layout--tiny:     false !default;\n$inuit-enable-layout--small:    false !default;\n$inuit-enable-layout--large:    false !default;\n$inuit-enable-layout--huge:     false !default;\n$inuit-enable-layout--flush:    false !default;\n$inuit-enable-layout--rev:      false !default;\n$inuit-enable-layout--middle:   false !default;\n$inuit-enable-layout--bottom:   false !default;\n$inuit-enable-layout--right:    false !default;\n$inuit-enable-layout--center:   false !default;\n$inuit-enable-layout--auto:     false !default;\n\n\n\n\n\n// Here we set a variable assuming that `box-sizing: border-box;` is not set\n// globally. If it has been previously been defined, the following variable will\n// be overriden and will be set to `true`.\n$inuit-global-border-box: false !default;\n\n\n\n\n\n/**\n * Begin a layout group.\n */\n.#{$inuit-layout-namespace}layout,\n%#{$inuit-layout-namespace}layout {\n    list-style: none;\n    margin:  0;\n    padding: 0;\n    margin-left: -$inuit-layout-gutter;\n}\n\n    /**\n     * 1. Cause columns to stack side-by-side.\n     * 2. Space columns apart.\n     * 3. Align columns to the tops of each other.\n     * 4. Full-width unless told to behave otherwise.\n     * 5. Required to combine fluid widths and fixed gutters.\n     */\n    .#{$inuit-layout-namespace}layout__item,\n    %#{$inuit-layout-namespace}layout__item {\n        display: inline-block; /* [1] */\n        padding-left: $inuit-layout-gutter; /* [2] */\n        vertical-align: top; /* [3] */\n        width: 100%; /* [4] */\n\n        @if $inuit-global-border-box == false {\n            -webkit-box-sizing: border-box; /* [5] */\n               -moz-box-sizing: border-box; /* [5] */\n                    box-sizing: border-box; /* [5] */\n        }\n\n    }\n\n\n\n\n\n@if ($inuit-enable-layout--tiny == true) {\n\n    /**\n     * Layouts with tiny gutters.\n     */\n\n    .#{$inuit-layout-namespace}layout--tiny,\n    %#{$inuit-layout-namespace}layout--tiny {\n        margin-left: -($inuit-layout-gutter--tiny);\n\n        > .#{$inuit-layout-namespace}layout__item,\n        > %#{$inuit-layout-namespace}layout__item {\n            padding-left: $inuit-layout-gutter--tiny;\n        }\n\n    }\n\n}\n\n@if ($inuit-enable-layout--small == true) {\n\n    /**\n     * Layouts with small gutters.\n     */\n\n    .#{$inuit-layout-namespace}layout--small,\n    %#{$inuit-layout-namespace}layout--small {\n        margin-left: -($inuit-layout-gutter--small);\n\n        > .#{$inuit-layout-namespace}layout__item,\n        > %#{$inuit-layout-namespace}layout__item {\n            padding-left: $inuit-layout-gutter--small;\n        }\n\n    }\n\n}\n\n@if ($inuit-enable-layout--large == true) {\n\n    /**\n     * Layouts with large gutters.\n     */\n\n    .#{$inuit-layout-namespace}layout--large,\n    %#{$inuit-layout-namespace}layout--large {\n        margin-left: -($inuit-layout-gutter--large);\n\n        > .#{$inuit-layout-namespace}layout__item,\n        > %#{$inuit-layout-namespace}layout__item {\n            padding-left: $inuit-layout-gutter--large;\n        }\n\n    }\n\n}\n\n@if ($inuit-enable-layout--huge == true) {\n\n    /**\n     * Layouts with huge gutters.\n     */\n\n    .#{$inuit-layout-namespace}layout--huge,\n    %#{$inuit-layout-namespace}layout--huge {\n        margin-left: -($inuit-layout-gutter--huge);\n\n        > .#{$inuit-layout-namespace}layout__item,\n        > %#{$inuit-layout-namespace}layout__item {\n            padding-left: $inuit-layout-gutter--huge;\n        }\n\n    }\n\n}\n\n\n\n\n\n@if ($inuit-enable-layout--flush == true) {\n\n    /**\n     * Layouts with no gutters.\n     */\n\n    .#{$inuit-layout-namespace}layout--flush,\n    %#{$inuit-layout-namespace}layout--flush {\n        margin-left: 0;\n\n        > .#{$inuit-layout-namespace}layout__item,\n        > %#{$inuit-layout-namespace}layout__item {\n            padding-left: 0;\n        }\n\n    }\n\n}\n\n\n\n\n\n@if ($inuit-enable-layout--rev == true) {\n\n    /**\n     * Reversed rendered order of layout items, e.g. items 1, 2, 3, 4 in your\n     * markup will display in order 4, 3, 2, 1 on your page.\n     */\n\n    .#{$inuit-layout-namespace}layout--rev,\n    %#{$inuit-layout-namespace}layout--rev {\n        direction: rtl;\n        text-align: left;\n\n        > .#{$inuit-layout-namespace}layout__item,\n        > %#{$inuit-layout-namespace}layout__item {\n            direction: ltr;\n            text-align: left;\n        }\n\n    }\n\n}\n\n\n\n\n\n@if ($inuit-enable-layout--middle == true) {\n\n    /**\n     * Align layout items to the vertical centers of each other.\n     */\n\n    .#{$inuit-layout-namespace}layout--middle,\n    %#{$inuit-layout-namespace}layout--middle {\n\n        > .#{$inuit-layout-namespace}layout__item,\n        > %#{$inuit-layout-namespace}layout__item {\n            vertical-align: middle;\n        }\n\n    }\n\n}\n\n@if ($inuit-enable-layout--bottom == true) {\n\n    /**\n     * Align layout items to the vertical bottoms of each other.\n     */\n\n    .#{$inuit-layout-namespace}layout--bottom,\n    %#{$inuit-layout-namespace}layout--bottom {\n\n        > .#{$inuit-layout-namespace}layout__item,\n        > %#{$inuit-layout-namespace}layout__item {\n            vertical-align: bottom;\n        }\n\n    }\n\n}\n\n\n\n\n\n@if ($inuit-enable-layout--right == true) {\n\n    /**\n     * Make the layout items fill up from the right hand side.\n     */\n\n    .#{$inuit-layout-namespace}layout--right,\n    %#{$inuit-layout-namespace}layout--right {\n        text-align: right;\n\n        > .#{$inuit-layout-namespace}layout__item,\n        > %#{$inuit-layout-namespace}layout__item {\n            text-align: left;\n        }\n\n    }\n\n}\n\n@if ($inuit-enable-layout--center == true) {\n\n    /**\n     * Make the layout items fill up from the center outward.\n     */\n\n    .#{$inuit-layout-namespace}layout--center,\n    %#{$inuit-layout-namespace}layout--center {\n        text-align: center;\n\n        > .#{$inuit-layout-namespace}layout__item,\n        > %#{$inuit-layout-namespace}layout__item {\n            text-align: left;\n        }\n\n    }\n\n}\n\n\n\n\n\n@if ($inuit-enable-layout--auto == true) {\n\n    /**\n     * Cause layout items to take up a non-explicit amount of width.\n     */\n    .#{$inuit-layout-namespace}layout--auto,\n    %#{$inuit-layout-namespace}layout--auto {\n\n        > .#{$inuit-layout-namespace}layout__item,\n        > %#{$inuit-layout-namespace}layout__item {\n            width: auto;\n        }\n\n    }\n\n}\n","/*------------------------------------*\\\n    #PACK\n\\*------------------------------------*/\n\n/**\n * The pack object simply causes any number of elements pack up horizontally to\n * automatically fill an equal, fluid width of their parent.\n */\n\n// Predefine the variables below in order to alter and enable specific features.\n$inuit-pack-namespace:      $inuit-namespace !default;\n\n$inuit-pack-gutter:         $inuit-base-spacing-unit !default;\n$inuit-pack-gutter--tiny:     quarter($inuit-pack-gutter) !default;\n$inuit-pack-gutter--small:      halve($inuit-pack-gutter) !default;\n$inuit-pack-gutter--large:     double($inuit-pack-gutter) !default;\n$inuit-pack-gutter--huge:   quadruple($inuit-pack-gutter) !default;\n\n$inuit-enable-pack--auto:   false !default;\n$inuit-enable-pack--tiny:   false !default;\n$inuit-enable-pack--small:  false !default;\n$inuit-enable-pack--large:  false !default;\n$inuit-enable-pack--huge:   false !default;\n$inuit-enable-pack--rev:    false !default;\n$inuit-enable-pack--middle: false !default;\n$inuit-enable-pack--bottom: false !default;\n\n\n\n\n\n/**\n * 1. Fill all available space.\n * 2. Cause children to be automatically equally sized.\n */\n.#{$inuit-pack-namespace}pack,\n%#{$inuit-pack-namespace}pack {\n    width: 100%; /* [1] */\n    display: table;\n    table-layout: fixed; /* [2] */\n}\n\n    /**\n     * Cause children to adopt table-like structure.\n     */\n    .#{$inuit-pack-namespace}pack__item,\n    %#{$inuit-pack-namespace}pack__item {\n        display: table-cell;\n\n        @if ($inuit-enable-pack--middle == true) {\n\n            /**\n             * All items are aligned to the middles of each other.\n             */\n\n            .#{$inuit-pack-namespace}pack--middle > &,\n            %#{$inuit-pack-namespace}pack--middle > & {\n                vertical-align: middle;\n            }\n\n        }\n\n        @if ($inuit-enable-pack--bottom == true) {\n\n            /**\n             * All items are aligned to the bottoms of each other.\n             */\n\n            .#{$inuit-pack-namespace}pack--bottom > &,\n            %#{$inuit-pack-namespace}pack--bottom > & {\n                vertical-align: bottom;\n            }\n\n        }\n\n    }\n\n\n\n\n\n@if ($inuit-enable-pack--auto == true) {\n\n    /**\n     * Cause children to pack up into available space, but not equally sized.\n     */\n\n    .#{$inuit-pack-namespace}pack--auto,\n    %#{$inuit-pack-namespace}pack--auto {\n        table-layout: auto;\n    }\n\n}\n\n\n\n\n\n@if ($inuit-enable-pack--tiny == true) {\n\n    /**\n     * Tiny gutters between items.\n     */\n\n    .#{$inuit-pack-namespace}pack--tiny,\n    %#{$inuit-pack-namespace}pack--tiny {\n        border-spacing: $inuit-pack-gutter--tiny;\n    }\n\n}\n\n@if ($inuit-enable-pack--small == true) {\n\n    /**\n     * Small gutters between items.\n     */\n\n    .#{$inuit-pack-namespace}pack--small,\n    %#{$inuit-pack-namespace}pack--small {\n        border-spacing: $inuit-pack-gutter--small;\n    }\n\n}\n\n@if ($inuit-enable-pack--large == true) {\n\n    /**\n     * Large gutters between items.\n     */\n\n    .#{$inuit-pack-namespace}pack--large,\n    %#{$inuit-pack-namespace}pack--large {\n        border-spacing: $inuit-pack-gutter--large;\n    }\n\n}\n\n@if ($inuit-enable-pack--huge == true) {\n\n    /**\n     * Huge gutters between items.\n     */\n\n    .#{$inuit-pack-namespace}pack--huge,\n    %#{$inuit-pack-namespace}pack--huge {\n        border-spacing: $inuit-pack-gutter--huge;\n    }\n\n}\n\n\n\n\n\n@if ($inuit-enable-pack--rev == true) {\n\n    /**\n     * Reversed order packs.\n     */\n    \n    .#{$inuit-pack-namespace}pack--rev,\n    %#{$inuit-pack-namespace}pack--rev {\n        direction: rtl;\n    \n        > .#{$inuit-pack-namespace}pack__item,\n        > %#{$inuit-pack-namespace}pack__item {\n            direction: ltr;\n        }\n    \n    }\n\n}\n","/*------------------------------------*\\\n    #MEDIA\n\\*------------------------------------*/\n\n/**\n * Place any image- and text-like content side-by-side, as per:\n * stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code\n */\n\n// Predefine the variables below in order to alter and enable specific features.\n$inuit-media-namespace:             $inuit-namespace !default;\n\n$inuit-media-gutter:                $inuit-base-spacing-unit !default;\n$inuit-media-gutter--tiny:            quarter($inuit-media-gutter) !default;\n$inuit-media-gutter--small:             halve($inuit-media-gutter) !default;\n$inuit-media-gutter--large:            double($inuit-media-gutter) !default;\n$inuit-media-gutter--huge:          quadruple($inuit-media-gutter) !default;\n\n$inuit-enable-media--tiny:          false !default;\n$inuit-enable-media--small:         false !default;\n$inuit-enable-media--large:         false !default;\n$inuit-enable-media--huge:          false !default;\n$inuit-enable-media--rev:           false !default;\n$inuit-enable-media--flush:         false !default;\n$inuit-enable-media--responsive:    false !default;\n$inuit-media-collapse-at:           720px !default;\n\n\n\n\n\n.#{$inuit-media-namespace}media,\n%#{$inuit-media-namespace}media {\n    @extend %clearfix;\n    display: block;\n}\n\n    .#{$inuit-media-namespace}media__img,\n    %#{$inuit-media-namespace}media__img {\n        float: left;\n        margin-right: $inuit-media-gutter;\n\n        > img {\n            display: block;\n        }\n\n    }\n\n    .#{$inuit-media-namespace}media__body,\n    %#{$inuit-media-namespace}media__body {\n        overflow: hidden;\n        display: block;\n\n        &,\n        > :last-child {\n            margin-bottom: 0;\n        }\n\n    }\n\n\n\n\n\n@if ($inuit-enable-media--tiny == true) {\n\n    /**\n     * Tiny media objects.\n     */\n\n    .#{$inuit-media-namespace}media--tiny,\n    %#{$inuit-media-namespace}media--tiny {\n\n        > .#{$inuit-media-namespace}media__img,\n        > %#{$inuit-media-namespace}media__img {\n            margin-right: $inuit-media-gutter--tiny;\n        }\n\n        @if ($inuit-enable-media--rev == true) {\n\n            /**\n             * Tiny reversed media objects.\n             */\n\n            &.#{$inuit-media-namespace}media--rev,\n            &%#{$inuit-media-namespace}media--rev {\n\n                > .#{$inuit-media-namespace}media__img,\n                > %#{$inuit-media-namespace}media__img {\n                    margin-right: 0;\n                    margin-left:  $inuit-media-gutter--tiny;\n                }\n\n            }\n\n        }\n\n    }\n\n}\n\n@if ($inuit-enable-media--small == true) {\n\n    /**\n     * Small media objects.\n     */\n\n    .#{$inuit-media-namespace}media--small,\n    %#{$inuit-media-namespace}media--small {\n\n        > .#{$inuit-media-namespace}media__img,\n        > %#{$inuit-media-namespace}media__img {\n            margin-right: $inuit-media-gutter--small;\n        }\n\n        @if ($inuit-enable-media--rev == true) {\n\n            /**\n             * Small reversed media objects.\n             */\n\n            &.#{$inuit-media-namespace}media--rev,\n            &%#{$inuit-media-namespace}media--rev {\n\n                > .#{$inuit-media-namespace}media__img,\n                > %#{$inuit-media-namespace}media__img {\n                    margin-right: 0;\n                    margin-left:  $inuit-media-gutter--small;\n                }\n\n            }\n\n        }\n\n    }\n\n}\n\n@if ($inuit-enable-media--large == true) {\n\n    /**\n     * Large media objects.\n     */\n\n    .#{$inuit-media-namespace}media--large,\n    %#{$inuit-media-namespace}media--large {\n\n        > .#{$inuit-media-namespace}media__img,\n        > %#{$inuit-media-namespace}media__img {\n            margin-right: $inuit-media-gutter--large;\n        }\n\n        @if ($inuit-enable-media--rev == true) {\n\n            /**\n             * Large reversed media objects.\n             */\n\n            &.#{$inuit-media-namespace}media--rev,\n            &%#{$inuit-media-namespace}media--rev {\n\n                > .media__img,\n                > %media__img {\n                    margin-right: 0;\n                    margin-left:  $inuit-media-gutter--large;\n                }\n\n            }\n\n        }\n\n    }\n\n}\n\n@if ($inuit-enable-media--huge == true) {\n\n    /**\n     * Huge media objects.\n     */\n\n    .#{$inuit-media-namespace}media--huge,\n    %#{$inuit-media-namespace}media--huge {\n\n        > .#{$inuit-media-namespace}media__img,\n        > %#{$inuit-media-namespace}media__img {\n            margin-right: $inuit-media-gutter--huge;\n        }\n\n        @if ($inuit-enable-media--rev == true) {\n\n            /**\n             * Huge reversed media objects.\n             */\n\n            &.#{$inuit-media-namespace}media--rev,\n            &%#{$inuit-media-namespace}media--rev {\n\n                > .media__img,\n                > %media__img {\n                    margin-right: 0;\n                    margin-left:  $inuit-media-gutter--huge;\n                }\n\n            }\n\n        }\n\n    }\n\n}\n\n\n\n\n\n@if ($inuit-enable-media--rev == true) {\n\n    /**\n     * Reversed image location (right instead of left). Extends `.media`.\n     */\n\n    .#{$inuit-media-namespace}media--rev,\n    %#{$inuit-media-namespace}media--rev {\n\n        > .#{$inuit-media-namespace}media__img,\n        > %#{$inuit-media-namespace}media__img {\n            float: right;\n            margin-right: 0;\n            margin-left: $inuit-media-gutter;\n        }\n\n    }\n\n}\n\n\n\n\n\n@if ($inuit-enable-media--flush == true) {\n\n    /**\n     * Flush media objects have no space between the image- and text-content.\n     */\n\n    .#{$inuit-media-namespace}media--flush,\n    %#{$inuit-media-namespace}media--flush {\n\n        > .#{$inuit-media-namespace}media__img,\n        > %#{$inuit-media-namespace}media__img {\n            margin-right: 0;\n            margin-left:  0;\n        }\n\n    }\n\n}\n\n\n\n\n\n@if ($inuit-enable-media--responsive == true) {\n\n    /**\n     * Responsive media objects.\n     *\n     * There is a very pragmatic, simple implementation of a responsive media\n     * object, which simply places the text-content beneath the image-content.\n     *\n     * We use a `max-width` media query because:\n     *\n     * a) it is the least verbose method in terms of amount of code required.\n     * b) the media object’s default state is image-next-to-text, so its stacked\n     *    state is the exception, rather than the rule.\n     */\n\n    @media screen and (max-width: $inuit-media-collapse-at) {\n\n        .#{$inuit-media-namespace}media--responsive,\n        %#{$inuit-media-namespace}media--responsive {\n\n            /**\n             * Rework the spacings on regular media objects.\n             */\n            > .#{$inuit-media-namespace}media__img,\n            > %#{$inuit-media-namespace}media__img {\n                float: none;\n                margin-right: 0;\n                margin-bottom: $inuit-media-gutter;\n                margin-left:  0;\n            }\n\n            @if ($inuit-enable-media--tiny == true) {\n\n                /**\n                 * Tiny responsive media objects.\n                 *\n                 * Take a little more heavy-handed approach to reworking\n                 * spacings on media objects that are also tiny media objects\n                 * in their regular state.\n                 */\n\n                &.#{$inuit-media-namespace}media--tiny,\n                &%#{$inuit-media-namespace}media--tiny {\n\n                    > .#{$inuit-media-namespace}media__img,\n                    > %#{$inuit-media-namespace}media__img {\n                        margin-right: 0;\n                        margin-left:  0;\n                        margin-bottom: $inuit-media-gutter--tiny;\n                    }\n\n                }\n\n            }\n\n            @if ($inuit-enable-media--small == true) {\n\n                /**\n                 * Small responsive media objects.\n                 *\n                 * Take a little more heavy-handed approach to reworking\n                 * spacings on media objects that are also small media objects\n                 * in their regular state.\n                 */\n\n                &.#{$inuit-media-namespace}media--small,\n                &%#{$inuit-media-namespace}media--small {\n\n                    > .#{$inuit-media-namespace}media__img,\n                    > %#{$inuit-media-namespace}media__img {\n                        margin-right: 0;\n                        margin-left:  0;\n                        margin-bottom: $inuit-media-gutter--small;\n                    }\n\n                }\n\n            }\n\n            @if ($inuit-enable-media--large == true) {\n\n                /**\n                 * Large responsive media objects.\n                 *\n                 * Take a little more heavy-handed approach to reworking\n                 * spacings on media objects that are also large media objects\n                 * in their regular state.\n                 */\n\n                &.#{$inuit-media-namespace}media--large,\n                &%#{$inuit-media-namespace}media--large {\n\n                    > .#{$inuit-media-namespace}media__img,\n                    > %#{$inuit-media-namespace}media__img {\n                        margin-right: 0;\n                        margin-left:  0;\n                        margin-bottom: $inuit-media-gutter--large;\n                    }\n\n                }\n\n            }\n\n            @if ($inuit-enable-media--huge == true) {\n\n                /**\n                 * Huge responsive media objects.\n                 *\n                 * Take a little more heavy-handed approach to reworking\n                 * spacings on media objects that are also huge media objects\n                 * in their regular state.\n                 */\n\n                &.#{$inuit-media-namespace}media--huge,\n                &%#{$inuit-media-namespace}media--huge {\n\n                    > .#{$inuit-media-namespace}media__img,\n                    > %#{$inuit-media-namespace}media__img {\n                        margin-right: 0;\n                        margin-left:  0;\n                        margin-bottom: $inuit-media-gutter--huge;\n                    }\n\n                }\n\n            }\n\n        }\n\n    }\n\n}\n","/*------------------------------------*\\\n    #FLAG\n\\*------------------------------------*/\n\n/**\n * The flag object is a design pattern similar to the media object, however it\n * utilises `display: table[-cell];` to give us control over the vertical\n * alignments of the text and image. csswizardry.com/2013/05/the-flag-object\n */\n\n// Predefine the variables below in order to alter and enable specific features.\n$inuit-flag-namespace:          $inuit-namespace !default;\n\n$inuit-flag-gutter:             $inuit-base-spacing-unit !default;\n$inuit-flag-gutter--tiny:         quarter($inuit-flag-gutter) !default;\n$inuit-flag-gutter--small:          halve($inuit-flag-gutter) !default;\n$inuit-flag-gutter--large:         double($inuit-flag-gutter) !default;\n$inuit-flag-gutter--huge:       quadruple($inuit-flag-gutter) !default;\n\n$inuit-enable-flag--tiny:       false !default;\n$inuit-enable-flag--small:      false !default;\n$inuit-enable-flag--large:      false !default;\n$inuit-enable-flag--huge:       false !default;\n$inuit-enable-flag--rev:        false !default;\n$inuit-enable-flag--flush:      false !default;\n$inuit-enable-flag--top:        false !default;\n$inuit-enable-flag--bottom:     false !default;\n$inuit-enable-flag--responsive: false !default;\n$inuit-flag-collapse-at:        720px !default;\n\n\n\n\n\n/**\n * 1. Allows us to control vertical alignments\n * 2. Force the object to be the full width of its parent. Combined with [1],\n *    this makes the object behave in a quasi-`display: block;` manner.\n */\n.#{$inuit-flag-namespace}flag,\n%#{$inuit-flag-namespace}flag {\n    display: table; /* [1] */\n    width: 100%; /* [2] */\n}\n\n    /**\n     * Items within a flag object. There should only ever be one of each.\n     *\n     * 1. Default to aligning content to their middles.\n     */\n    .#{$inuit-flag-namespace}flag__img,\n    %#{$inuit-flag-namespace}flag__img,\n    .#{$inuit-flag-namespace}flag__body,\n    %#{$inuit-flag-namespace}flag__body {\n        display: table-cell;\n        vertical-align: middle; /* [1] */\n    }\n\n    /**\n     * Flag images have a space between them and the body of the object.\n     */\n    .#{$inuit-flag-namespace}flag__img,\n    %#{$inuit-flag-namespace}flag__img {\n        padding-right: $inuit-flag-gutter;\n\n        > img {\n            display: block;\n            max-width: none;\n        }\n\n    }\n\n    /**\n     * The container for the main content of the flag object.\n     *\n     * 1. Forces the `.flag__body` to take up all remaining space.\n     */\n    .#{$inuit-flag-namespace}flag__body,\n    %#{$inuit-flag-namespace}flag__body {\n        width: 100%; /* [1] */\n\n        &,\n        > :last-child {\n            margin-bottom: 0;\n        }\n\n    }\n\n\n\n\n\n@if ($inuit-enable-flag--tiny == true) {\n\n    /**\n     * Tiny flags.\n     */\n\n    .#{$inuit-flag-namespace}flag--tiny,\n    %#{$inuit-flag-namespace}flag--tiny {\n\n        > .#{$inuit-flag-namespace}flag__img,\n        > %#{$inuit-flag-namespace}flag__img {\n            padding-right: $inuit-flag-gutter--tiny;\n        }\n\n        @if ($inuit-enable-flag--rev == true) {\n\n            /**\n             * Tiny reversed flags.\n             */\n\n            &.#{$inuit-flag-namespace}flag--rev,\n            &%#{$inuit-flag-namespace}flag--rev {\n\n                > .#{$inuit-flag-namespace}flag__img,\n                > %#{$inuit-flag-namespace}flag__img {\n                    padding-right: 0;\n                    padding-left:  $inuit-flag-gutter--tiny;\n                }\n\n            }\n\n        }\n\n    }\n\n}\n\n@if ($inuit-enable-flag--small == true) {\n\n    /**\n     * Small flags.\n     */\n\n    .#{$inuit-flag-namespace}flag--small,\n    %#{$inuit-flag-namespace}flag--small {\n\n        > .#{$inuit-flag-namespace}flag__img,\n        > %#{$inuit-flag-namespace}flag__img {\n            padding-right: $inuit-flag-gutter--small;\n        }\n\n        @if ($inuit-enable-flag--rev == true) {\n\n            /**\n             * Small reversed flags.\n             */\n\n            &.#{$inuit-flag-namespace}flag--rev,\n            &%#{$inuit-flag-namespace}flag--rev {\n\n                > .#{$inuit-flag-namespace}flag__img,\n                > %#{$inuit-flag-namespace}flag__img {\n                    padding-right: 0;\n                    padding-left:  $inuit-flag-gutter--small;\n                }\n\n            }\n\n        }\n\n    }\n\n}\n\n@if ($inuit-enable-flag--large == true) {\n\n    /**\n     * Large flags.\n     */\n\n    .#{$inuit-flag-namespace}flag--large,\n    %#{$inuit-flag-namespace}flag--large {\n\n        > .#{$inuit-flag-namespace}flag__img,\n        > %#{$inuit-flag-namespace}flag__img {\n            padding-right: $inuit-flag-gutter--large;\n        }\n\n        @if ($inuit-enable-flag--rev == true) {\n\n            /**\n             * Large reversed flags.\n             */\n\n            &.#{$inuit-flag-namespace}flag--rev,\n            &%#{$inuit-flag-namespace}flag--rev {\n\n                > .#{$inuit-flag-namespace}flag__img,\n                > %#{$inuit-flag-namespace}flag__img {\n                    padding-right: 0;\n                    padding-left:  $inuit-flag-gutter--large;\n                }\n\n            }\n\n        }\n\n    }\n\n}\n\n@if ($inuit-enable-flag--huge == true) {\n\n    /**\n     * Huge flags.\n     */\n\n    .#{$inuit-flag-namespace}flag--huge,\n    %#{$inuit-flag-namespace}flag--huge {\n\n        > .#{$inuit-flag-namespace}flag__img,\n        > %#{$inuit-flag-namespace}flag__img {\n            padding-right: $inuit-flag-gutter--huge;\n        }\n\n        @if ($inuit-enable-flag--rev == true) {\n\n            /**\n             * Huge reversed flags.\n             */\n\n            &.#{$inuit-flag-namespace}flag--rev,\n            &%#{$inuit-flag-namespace}flag--rev {\n\n                > .#{$inuit-flag-namespace}flag__img,\n                > %#{$inuit-flag-namespace}flag__img {\n                    padding-right: 0;\n                    padding-left:  $inuit-flag-gutter--huge;\n                }\n\n            }\n\n        }\n\n    }\n\n}\n\n\n\n\n\n@if ($inuit-enable-flag--rev == true) {\n\n    /**\n     * Reversed flag objects have their image-content to the right, and text-content\n     * to the left.\n     *\n     * 1. Swap the rendered direction of the object…\n     * 2. …and reset it.\n     * 3. Reassign margins to the correct sides.\n     */\n\n    .#{$inuit-flag-namespace}flag--rev,\n    %#{$inuit-flag-namespace}flag--rev {\n        direction: rtl; /* [1] */\n\n        > .#{$inuit-flag-namespace}flag__img,\n        > %#{$inuit-flag-namespace}flag__img,\n        > .#{$inuit-flag-namespace}flag__body,\n        > %#{$inuit-flag-namespace}flag__body {\n            direction: ltr; /* [2] */\n        }\n\n        > .#{$inuit-flag-namespace}flag__img,\n        > %#{$inuit-flag-namespace}flag__img {\n            padding-right: 0; /* [3] */\n            padding-left: $inuit-flag-gutter; /* [3] */\n        }\n\n    }\n\n}\n\n\n\n\n\n@if ($inuit-enable-flag--flush == true) {\n\n    /**\n     * Flush flag objects have no space between the image- and text-content.\n     */\n\n    .#{$inuit-flag-namespace}flag--flush,\n    %#{$inuit-flag-namespace}flag--flush {\n\n        > .#{$inuit-flag-namespace}flag__img,\n        > %#{$inuit-flag-namespace}flag__img {\n            padding-right: 0;\n            padding-left:  0;\n        }\n\n    }\n\n}\n\n\n\n\n\n@if ($inuit-enable-flag--top == true) {\n\n    /**\n     * Vertically top aligned flag objects.\n     */\n\n    .#{$inuit-flag-namespace}flag--top,\n    %#{$inuit-flag-namespace}flag--top {\n\n        > .#{$inuit-flag-namespace}flag__img,\n        > %#{$inuit-flag-namespace}flag__img,\n        > .#{$inuit-flag-namespace}flag__body,\n        > %#{$inuit-flag-namespace}flag__body {\n            vertical-align: top;\n        }\n\n    }\n\n}\n\n@if ($inuit-enable-flag--bottom == true) {\n\n    /**\n     * Vertically bottom aligned flag objects.\n     */\n\n    .#{$inuit-flag-namespace}flag--bottom,\n    %#{$inuit-flag-namespace}flag--bottom {\n\n        > .#{$inuit-flag-namespace}flag__img,\n        > %#{$inuit-flag-namespace}flag__img,\n        > .#{$inuit-flag-namespace}flag__body,\n        > %#{$inuit-flag-namespace}flag__body {\n            vertical-align: bottom;\n        }\n\n    }\n\n}\n\n\n\n\n@if ($inuit-enable-flag--responsive == true) {\n\n    /**\n     * Responsive flag objects.\n     *\n     * There is a very pragmatic, simple implementation of a responsive flag\n     * object, which simply places the text-content beneath the image-content.\n     *\n     * We use a `max-width` media query because:\n     *\n     * a) it is the least verbose method in terms of amount of code required.\n     * b) the flag object’s default state is image-next-to-text, so its stacked\n     *    state is the exception, rather than the rule.\n     */\n\n    @media screen and (max-width: $inuit-flag-collapse-at) {\n\n        .#{$inuit-flag-namespace}flag--responsive,\n        %#{$inuit-flag-namespace}flag--responsive {\n\n            @if ($inuit-enable-flag--rev == true) {\n\n                /**\n                 * Disable reversal of content because there is no concept of\n                 * ‘reversed’ in a stacked layout.\n                 */\n                direction: ltr;\n            }\n\n            &,\n            > .#{$inuit-flag-namespace}flag__img,\n            > %#{$inuit-flag-namespace}flag__img,\n            > .#{$inuit-flag-namespace}flag__body,\n            > %#{$inuit-flag-namespace}flag__body {\n                display: block;\n            }\n\n            /**\n             * Rework the spacings on regular flag objects.\n             */\n            > .#{$inuit-flag-namespace}flag__img,\n            > %#{$inuit-flag-namespace}flag__img {\n                padding-right: 0;\n                padding-left:  0;\n                margin-bottom: $inuit-flag-gutter;\n            }\n\n            @if ($inuit-enable-flag--tiny == true) {\n\n                /**\n                 * Tiny responsive flags.\n                 *\n                 * Take a little more heavy-handed approach to reworking\n                 * spacings on flags that are also tiny flags in their regular\n                 * state.\n                 */\n\n                &.#{$inuit-flag-namespace}flag--tiny,\n                &%#{$inuit-flag-namespace}flag--tiny {\n\n                    > .#{$inuit-flag-namespace}flag__img,\n                    > %#{$inuit-flag-namespace}flag__img {\n                        padding-right: 0;\n                        padding-left:  0;\n                        margin-bottom: $inuit-flag-gutter--tiny;\n                    }\n\n                }\n\n            }\n\n            @if ($inuit-enable-flag--small == true) {\n\n                /**\n                 * Small responsive flags.\n                 *\n                 * Take a little more heavy-handed approach to reworking\n                 * spacings on flags that are also small flags in their regular\n                 * state.\n                 */\n\n                &.#{$inuit-flag-namespace}flag--small,\n                &%#{$inuit-flag-namespace}flag--small {\n\n                    > .#{$inuit-flag-namespace}flag__img,\n                    > %#{$inuit-flag-namespace}flag__img {\n                        padding-right: 0;\n                        padding-left:  0;\n                        margin-bottom: $inuit-flag-gutter--small;\n                    }\n\n                }\n\n            }\n\n            @if ($inuit-enable-flag--large == true) {\n\n                /**\n                 * Large responsive flags.\n                 *\n                 * Take a little more heavy-handed approach to reworking\n                 * spacings on flags that are also large flags in their regular\n                 * state.\n                 */\n\n                &.#{$inuit-flag-namespace}flag--large,\n                &%#{$inuit-flag-namespace}flag--large {\n\n                    > .#{$inuit-flag-namespace}flag__img,\n                    > %#{$inuit-flag-namespace}flag__img {\n                        padding-right: 0;\n                        padding-left:  0;\n                        margin-bottom: $inuit-flag-gutter--large;\n                    }\n\n                }\n\n            }\n\n            @if ($inuit-enable-flag--huge == true) {\n\n                /**\n                 * Huge responsive flags.\n                 *\n                 * Take a little more heavy-handed approach to reworking\n                 * spacings on flags that are also huge flags in their regular\n                 * state.\n                 */\n\n                &.#{$inuit-flag-namespace}flag--huge,\n                &%#{$inuit-flag-namespace}flag--huge {\n\n                    > .#{$inuit-flag-namespace}flag__img,\n                    > %#{$inuit-flag-namespace}flag__img {\n                        padding-right: 0;\n                        padding-left:  0;\n                        margin-bottom: $inuit-flag-gutter--huge;\n                    }\n\n                }\n\n            }\n\n        }\n\n    }\n\n}\n","/*------------------------------------*\\\n    #LIST-BARE\n\\*------------------------------------*/\n\n/**\n * The list-bare object simply removes any indents and bullet points from lists.\n */\n\n// Predefine the variables below in order to alter and enable specific features.\n$inuit-list-bare-namespace: $inuit-namespace !default;\n\n.#{$inuit-list-bare-namespace}list-bare,\n%#{$inuit-list-bare-namespace}list-bare {\n    margin:  0;\n    padding: 0;\n    list-style: none;\n}\n",".heading{\n    position: fixed;\n    margin: 30px 0 0 20px;\n    font-size: 18px;\n}\n","/*auto-generated*/\n\n@import \"footer\";\n@import \"nav\";\n@import \"post\";\n","/**\n* @module:   footer\n* @js:       ./source/js/module/footer/footer.js\n* @html:     ./source/js/module/footer/footer.html\n*/\n\n\n@include module(\"footer\") {\n    margin: 0 auto;\n    width: 60%;\n\n    .container--copyRights{\n        width: 50%;\n        float: left;\n    }\n\n    .container--builtBy{\n        width: 50%;\n        float: right;\n        margin-bottom: 60px;\n    }\n\n    .footer-text{\n        font-size: 14px;\n        color: $grey;\n        margin-bottom: 5px;\n        line-height: 1;\n    }\n    // left: 50%;\n    // transform: translateX(-50%);\n}\n","///////////////////////////////////////////////////////////////////////////////\n// # Mixin to create modules with the ability of extending other modules\n//\n// @param String $name      The name of your module\n// @param Map $args         Map with two parameters:\n//        String $extend    The class you want to extend (optional)\n//        String $silent    If the class should be silent or not,\n//                          most of the times it's useful for abstract modules\n//\n// e.g.\n//    @include module(\"abstract-module\", (silent: true)) { };\n//    @include module(\"new-module\", (extend: \"abstract-module\")) { };\n//    @include module(\"simple-module\") { };\n///////////////////////////////////////////////////////////////////////////////\n@mixin module($name, $args: ()) {\n  $i: \".\";\n  @if map-get($args, \"silent\") { $i: \"%\"; }\n\n  #{$i}#{$name} {\n    @if map-get($args, \"extend\") {\n      @extend .#{map-get($args, \"extend\")} !optional;\n      @extend %#{map-get($args, \"extend\")} !optional;\n    }\n    @content;\n  }\n}\n","/**\n* @module:   nav\n* @js:       ./source/js/module/nav/nav.js\n* @html:     ./source/js/module/nav/nav.html\n*/\n\n\n@include module(\"nav\") {\n    position: fixed;\n    right: 20px;\n    top: 30px;\n\n    .item--nav{\n        list-style: none;\n        color: $text-white;\n        font-weight: bold;\n\n        a{\n            color: $text-white;\n            text-decoration:none;\n\n        }\n    }\n}\n","/**\n* @module:   post\n* @js:       ./source/js/module/post/post.js\n* @html:     ./source/js/module/post/post.html\n*/\n\n\n@include module(\"post\") {\n    width: 60%;\n    margin: 0 auto;\n    position: relative;\n    // position: absolute;\n    // top: 0;\n    // left: 50%;\n    // transform: translateX(-50%);\n    overflow: hidden;\n\n    .subheading{\n        margin: 30px 0 145px 0;\n        font-size: 18px;\n        color: $grey;\n    }\n\n    .photo--container{\n        position: relative;\n        margin-bottom: 50px;\n    }\n\n    .post-photo{\n        width: 100%;\n        height: auto;\n        cursor: pointer;\n    }\n\n    .panel--info{\n        position: absolute;\n        height: 100%;\n        width: 25%;\n        color: $text-white;\n        background-color: $panel-backgroundColor;\n        display: block;\n        padding: 10px;\n        transform: translateX(-100%);\n        transition: all 0.5s ease-out;\n    }\n\n    .movePanel{\n        transform: translateX(0);\n    }\n\n\n    .plus{\n        background-image: url('../img/plus.png');\n        position: absolute;\n        background-size: contain;\n        right: 10px;\n        top: 10px;\n        height: 40px;\n        width: 40px;\n        z-index: 20;\n        transition: transform 0.2s ease-out\n    }\n\n    .rotate{\n        transform: rotate(45deg);\n    }\n\n    .picture-name{\n        font-family: serif;\n    }\n\n    .picture-date{\n        position: absolute;\n        bottom: 10px;\n\n    }\n\n    .back{\n        background-color: black;\n        height: 100%;\n        width: 100%;\n    }\n\n\n    .lightBox{\n        position: fixed;\n        display: none;\n        height: 100%;\n        width: 100%;\n        background-color: rgba(0,0,0, 0.5);\n        top: 0;\n        left: 0;\n    }\n}\n","/*------------------------------------*\\\n    #SPACING\n\\*------------------------------------*/\n\n/**\n * Margin and padding helper classes. Use these to tweak layout on a micro\n * level.\n *\n * `.(m|p)(t|r|b|l|h|v)(-|+|0) {}` = margin/padding top/right/bottom/left/horizontal/vertical less/more/none\n */\n\n// Predefine the variables below in order to alter and enable specific features.\n$inuit-spacing-namespace:               $inuit-namespace !default;\n\n$inuit-margin:                          $inuit-base-spacing-unit !default;\n$inuit-margin--small:                       halve($inuit-margin) !default;\n$inuit-margin--tiny:                      quarter($inuit-margin) !default;\n$inuit-margin--large:                      double($inuit-margin) !default;\n$inuit-margin--huge:                    quadruple($inuit-margin) !default;\n\n$inuit-padding:                         $inuit-base-spacing-unit !default;\n$inuit-padding--small:                      halve($inuit-padding) !default;\n$inuit-padding--tiny:                     quarter($inuit-padding) !default;\n$inuit-padding--large:                     double($inuit-padding) !default;\n$inuit-padding--huge:                   quadruple($inuit-padding) !default;\n\n$inuit-enable-margins:                  false !default;\n$inuit-enable-margins--tiny:            false !default;\n$inuit-enable-margins--small:           false !default;\n$inuit-enable-margins--large:           false !default;\n$inuit-enable-margins--huge:            false !default;\n\n$inuit-enable-margins--negative:        false !default;\n$inuit-enable-margins--negative-tiny:   false !default;\n$inuit-enable-margins--negative-small:  false !default;\n$inuit-enable-margins--negative-large:  false !default;\n$inuit-enable-margins--negative-huge:   false !default;\n\n$inuit-enable-margins--none:            false !default;\n\n$inuit-enable-paddings:                 false !default;\n$inuit-enable-paddings--tiny:           false !default;\n$inuit-enable-paddings--small:          false !default;\n$inuit-enable-paddings--large:          false !default;\n$inuit-enable-paddings--huge:           false !default;\n\n$inuit-enable-paddings--none:           false !default;\n\n\n\n\n\n@if ($inuit-enable-margins == true) {\n\n    /**\n     * Margin helper classes.\n     *\n     * Add margins.\n     */\n\n    .#{$inuit-spacing-namespace}u-m     { margin:           $inuit-margin !important; }\n    .#{$inuit-spacing-namespace}u-mt    { margin-top:       $inuit-margin !important; }\n    .#{$inuit-spacing-namespace}u-mr    { margin-right:     $inuit-margin !important; }\n    .#{$inuit-spacing-namespace}u-mb    { margin-bottom:    $inuit-margin !important; }\n    .#{$inuit-spacing-namespace}u-ml    { margin-left:      $inuit-margin !important; }\n    .#{$inuit-spacing-namespace}u-mh    { margin-right:     $inuit-margin !important; margin-left:      $inuit-margin !important; }\n    .#{$inuit-spacing-namespace}u-mv    { margin-top:       $inuit-margin !important; margin-bottom:    $inuit-margin !important; }\n\n}\n\n\n@if ($inuit-enable-margins--tiny == true) {\n\n    /**\n     * Add tiny margins.\n     */\n\n    .#{$inuit-spacing-namespace}u-m--   { margin:           $inuit-margin--tiny !important; }\n    .#{$inuit-spacing-namespace}u-mt--  { margin-top:       $inuit-margin--tiny !important; }\n    .#{$inuit-spacing-namespace}u-mr--  { margin-right:     $inuit-margin--tiny !important; }\n    .#{$inuit-spacing-namespace}u-mb--  { margin-bottom:    $inuit-margin--tiny !important; }\n    .#{$inuit-spacing-namespace}u-ml--  { margin-left:      $inuit-margin--tiny !important; }\n    .#{$inuit-spacing-namespace}u-mh--  { margin-right:     $inuit-margin--tiny !important; margin-left:     $inuit-margin--tiny !important; }\n    .#{$inuit-spacing-namespace}u-mv--  { margin-top:       $inuit-margin--tiny !important; margin-bottom:   $inuit-margin--tiny !important; }\n\n}\n\n\n@if ($inuit-enable-margins--small == true) {\n\n    /**\n     * Add small margins.\n     */\n\n    .#{$inuit-spacing-namespace}u-m-    { margin:           $inuit-margin--small !important; }\n    .#{$inuit-spacing-namespace}u-mt-   { margin-top:       $inuit-margin--small !important; }\n    .#{$inuit-spacing-namespace}u-mr-   { margin-right:     $inuit-margin--small !important; }\n    .#{$inuit-spacing-namespace}u-mb-   { margin-bottom:    $inuit-margin--small !important; }\n    .#{$inuit-spacing-namespace}u-ml-   { margin-left:      $inuit-margin--small !important; }\n    .#{$inuit-spacing-namespace}u-mh-   { margin-right:     $inuit-margin--small !important; margin-left:   $inuit-margin--small !important; }\n    .#{$inuit-spacing-namespace}u-mv-   { margin-top:       $inuit-margin--small !important; margin-bottom: $inuit-margin--small !important; }\n\n}\n\n\n@if ($inuit-enable-margins--large == true) {\n\n    /**\n     * Add large margins.\n     */\n\n    .#{$inuit-spacing-namespace}u-m\\+   { margin:           $inuit-margin--large !important; }\n    .#{$inuit-spacing-namespace}u-mt\\+  { margin-top:       $inuit-margin--large !important; }\n    .#{$inuit-spacing-namespace}u-mr\\+  { margin-right:     $inuit-margin--large !important; }\n    .#{$inuit-spacing-namespace}u-mb\\+  { margin-bottom:    $inuit-margin--large !important; }\n    .#{$inuit-spacing-namespace}u-ml\\+  { margin-left:      $inuit-margin--large !important; }\n    .#{$inuit-spacing-namespace}u-mh\\+  { margin-right:     $inuit-margin--large !important; margin-left:      $inuit-margin--large !important; }\n    .#{$inuit-spacing-namespace}u-mv\\+  { margin-top:       $inuit-margin--large !important; margin-bottom:    $inuit-margin--large !important; }\n\n}\n\n\n@if ($inuit-enable-margins--huge == true) {\n\n    /**\n     * Add huge margins.\n     */\n\n    .#{$inuit-spacing-namespace}u-m\\+\\+     { margin:           $inuit-margin--huge !important; }\n    .#{$inuit-spacing-namespace}u-mt\\+\\+    { margin-top:       $inuit-margin--huge !important; }\n    .#{$inuit-spacing-namespace}u-mr\\+\\+    { margin-right:     $inuit-margin--huge !important; }\n    .#{$inuit-spacing-namespace}u-mb\\+\\+    { margin-bottom:    $inuit-margin--huge !important; }\n    .#{$inuit-spacing-namespace}u-ml\\+\\+    { margin-left:      $inuit-margin--huge !important; }\n    .#{$inuit-spacing-namespace}u-mh\\+\\+    { margin-right:     $inuit-margin--huge !important; margin-left:   $inuit-margin--huge !important; }\n    .#{$inuit-spacing-namespace}u-mv\\+\\+    { margin-top:       $inuit-margin--huge !important; margin-bottom: $inuit-margin--huge !important; }\n\n}\n\n\n@if ($inuit-enable-margins--none == true) {\n\n    /**\n     * Remove margins.\n     */\n\n    .#{$inuit-spacing-namespace}u-m0    { margin:           0 !important; }\n    .#{$inuit-spacing-namespace}u-mt0   { margin-top:       0 !important; }\n    .#{$inuit-spacing-namespace}u-mr0   { margin-right:     0 !important; }\n    .#{$inuit-spacing-namespace}u-mb0   { margin-bottom:    0 !important; }\n    .#{$inuit-spacing-namespace}u-ml0   { margin-left:      0 !important; }\n    .#{$inuit-spacing-namespace}u-mh0   { margin-right:     0 !important; margin-left:      0 !important; }\n    .#{$inuit-spacing-namespace}u-mv0   { margin-top:       0 !important; margin-bottom:    0 !important; }\n\n}\n\n\n@if ($inuit-enable-margins--negative == true) {\n\n    /**\n     * Negative margins.\n     */\n\n    .#{$inuit-spacing-namespace}u--m    { margin:           -$inuit-margin !important; }\n    .#{$inuit-spacing-namespace}u--mt   { margin-top:       -$inuit-margin !important; }\n    .#{$inuit-spacing-namespace}u--mr   { margin-right:     -$inuit-margin !important; }\n    .#{$inuit-spacing-namespace}u--mb   { margin-bottom:    -$inuit-margin !important; }\n    .#{$inuit-spacing-namespace}u--ml   { margin-left:      -$inuit-margin !important; }\n    .#{$inuit-spacing-namespace}u--mh   { margin-right:     -$inuit-margin !important; margin-left:      -$inuit-margin !important; }\n    .#{$inuit-spacing-namespace}u--mv   { margin-top:       -$inuit-margin !important; margin-bottom:    -$inuit-margin !important; }\n\n}\n\n\n@if ($inuit-enable-margins--negative-tiny == true) {\n\n    /**\n     * Tiny negative margins.\n     */\n\n    .#{$inuit-spacing-namespace}u--m--  { margin:           -$inuit-margin--tiny !important; }\n    .#{$inuit-spacing-namespace}u--mt-- { margin-top:       -$inuit-margin--tiny !important; }\n    .#{$inuit-spacing-namespace}u--mr-- { margin-right:     -$inuit-margin--tiny !important; }\n    .#{$inuit-spacing-namespace}u--mb-- { margin-bottom:    -$inuit-margin--tiny !important; }\n    .#{$inuit-spacing-namespace}u--ml-- { margin-left:      -$inuit-margin--tiny !important; }\n    .#{$inuit-spacing-namespace}u--mh-- { margin-right:     -$inuit-margin--tiny !important; margin-left:     -$inuit-margin--tiny !important; }\n    .#{$inuit-spacing-namespace}u--mv-- { margin-top:       -$inuit-margin--tiny !important; margin-bottom:   -$inuit-margin--huge !important; }\n\n}\n\n\n@if ($inuit-enable-margins--negative-small == true) {\n\n    /**\n     * Small negative margins.\n     */\n\n    .#{$inuit-spacing-namespace}u--m-   { margin:           -$inuit-margin--small !important; }\n    .#{$inuit-spacing-namespace}u--mt-  { margin-top:       -$inuit-margin--small !important; }\n    .#{$inuit-spacing-namespace}u--mr-  { margin-right:     -$inuit-margin--small !important; }\n    .#{$inuit-spacing-namespace}u--mb-  { margin-bottom:    -$inuit-margin--small !important; }\n    .#{$inuit-spacing-namespace}u--ml-  { margin-left:      -$inuit-margin--small !important; }\n    .#{$inuit-spacing-namespace}u--mh-  { margin-right:     -$inuit-margin--small !important; margin-left:   -$inuit-margin--small !important; }\n    .#{$inuit-spacing-namespace}u--mv-  { margin-top:       -$inuit-margin--small !important; margin-bottom: -$inuit-margin--small !important; }\n\n}\n\n\n@if ($inuit-enable-margins--negative-large == true) {\n\n    /**\n     * Large negative margins.\n     */\n\n    .#{$inuit-spacing-namespace}u--m\\+  { margin:           -$inuit-margin--large !important; }\n    .#{$inuit-spacing-namespace}u--mt\\+ { margin-top:       -$inuit-margin--large !important; }\n    .#{$inuit-spacing-namespace}u--mr\\+ { margin-right:     -$inuit-margin--large !important; }\n    .#{$inuit-spacing-namespace}u--mb\\+ { margin-bottom:    -$inuit-margin--large !important; }\n    .#{$inuit-spacing-namespace}u--ml\\+ { margin-left:      -$inuit-margin--large !important; }\n    .#{$inuit-spacing-namespace}u--mh\\+ { margin-right:     -$inuit-margin--large !important; margin-left:      -$inuit-margin--large !important; }\n    .#{$inuit-spacing-namespace}u--mv\\+ { margin-top:       -$inuit-margin--large !important; margin-bottom:    -$inuit-margin--large !important; }\n\n}\n\n\n@if ($inuit-enable-margins--negative-huge == true) {\n\n    /**\n     * Huge negative margins.\n     */\n\n    .#{$inuit-spacing-namespace}u--m\\+\\+    { margin:           -$inuit-margin--huge !important; }\n    .#{$inuit-spacing-namespace}u--mt\\+\\+   { margin-top:       -$inuit-margin--huge !important; }\n    .#{$inuit-spacing-namespace}u--mr\\+\\+   { margin-right:     -$inuit-margin--huge !important; }\n    .#{$inuit-spacing-namespace}u--mb\\+\\+   { margin-bottom:    -$inuit-margin--huge !important; }\n    .#{$inuit-spacing-namespace}u--ml\\+\\+   { margin-left:      -$inuit-margin--huge !important; }\n    .#{$inuit-spacing-namespace}u--mh\\+\\+   { margin-right:     -$inuit-margin--huge !important; margin-left:   -$inuit-margin--huge !important; }\n    .#{$inuit-spacing-namespace}u--mv\\+\\+   { margin-top:       -$inuit-margin--huge !important; margin-bottom: -$inuit-margin--huge !important; }\n\n}\n\n\n\n\n\n@if ($inuit-enable-paddings == true) {\n\n    /**\n     * Padding helper classes.\n     *\n     * Add paddings.\n     */\n\n    .#{$inuit-spacing-namespace}u-p     { padding:          $inuit-padding !important; }\n    .#{$inuit-spacing-namespace}u-pt    { padding-top:      $inuit-padding !important; }\n    .#{$inuit-spacing-namespace}u-pr    { padding-right:    $inuit-padding !important; }\n    .#{$inuit-spacing-namespace}u-pb    { padding-bottom:   $inuit-padding !important; }\n    .#{$inuit-spacing-namespace}u-pl    { padding-left:     $inuit-padding !important; }\n    .#{$inuit-spacing-namespace}u-ph    { padding-right:    $inuit-padding !important; padding-left:    $inuit-padding !important; }\n    .#{$inuit-spacing-namespace}u-pv    { padding-top:      $inuit-padding !important; padding-bottom:  $inuit-padding !important; }\n\n}\n\n\n@if ($inuit-enable-paddings--tiny == true) {\n\n    /**\n     * Add tiny paddings.\n     */\n\n    .#{$inuit-spacing-namespace}u-p--   { padding:           $inuit-padding--tiny !important; }\n    .#{$inuit-spacing-namespace}u-pt--  { padding-top:       $inuit-padding--tiny !important; }\n    .#{$inuit-spacing-namespace}u-pr--  { padding-right:     $inuit-padding--tiny !important; }\n    .#{$inuit-spacing-namespace}u-pb--  { padding-bottom:    $inuit-padding--tiny !important; }\n    .#{$inuit-spacing-namespace}u-pl--  { padding-left:      $inuit-padding--tiny !important; }\n    .#{$inuit-spacing-namespace}u-ph--  { padding-right:     $inuit-padding--tiny !important; padding-left:      $inuit-padding--tiny !important; }\n    .#{$inuit-spacing-namespace}u-pv--  { padding-top:       $inuit-padding--tiny !important; padding-bottom:    $inuit-padding--tiny !important; }\n\n}\n\n\n@if ($inuit-enable-paddings--small == true) {\n\n    /**\n     * Add small paddings.\n     */\n\n    .#{$inuit-spacing-namespace}u-p-    { padding:           $inuit-padding--small !important; }\n    .#{$inuit-spacing-namespace}u-pt-   { padding-top:       $inuit-padding--small !important; }\n    .#{$inuit-spacing-namespace}u-pr-   { padding-right:     $inuit-padding--small !important; }\n    .#{$inuit-spacing-namespace}u-pb-   { padding-bottom:    $inuit-padding--small !important; }\n    .#{$inuit-spacing-namespace}u-pl-   { padding-left:      $inuit-padding--small !important; }\n    .#{$inuit-spacing-namespace}u-ph-   { padding-right:     $inuit-padding--small !important; padding-left:    $inuit-padding--small !important; }\n    .#{$inuit-spacing-namespace}u-pv-   { padding-top:       $inuit-padding--small !important; padding-bottom:  $inuit-padding--small !important; }\n\n}\n\n\n@if ($inuit-enable-paddings--large == true) {\n\n    /**\n     * Add large paddings.\n     */\n\n    .#{$inuit-spacing-namespace}u-p\\+   { padding:           $inuit-padding--large !important; }\n    .#{$inuit-spacing-namespace}u-pt\\+  { padding-top:       $inuit-padding--large !important; }\n    .#{$inuit-spacing-namespace}u-pr\\+  { padding-right:     $inuit-padding--large !important; }\n    .#{$inuit-spacing-namespace}u-pb\\+  { padding-bottom:    $inuit-padding--large !important; }\n    .#{$inuit-spacing-namespace}u-pl\\+  { padding-left:      $inuit-padding--large !important; }\n    .#{$inuit-spacing-namespace}u-ph\\+  { padding-right:     $inuit-padding--large !important; padding-left:   $inuit-padding--large !important; }\n    .#{$inuit-spacing-namespace}u-pv\\+  { padding-top:       $inuit-padding--large !important; padding-bottom: $inuit-padding--large !important; }\n\n}\n\n\n@if ($inuit-enable-paddings--huge == true) {\n\n    /**\n     * Add huge paddings.\n     */\n\n    .#{$inuit-spacing-namespace}u-p\\+\\+     { padding:           $inuit-padding--huge !important; }\n    .#{$inuit-spacing-namespace}u-pt\\+\\+    { padding-top:       $inuit-padding--huge !important; }\n    .#{$inuit-spacing-namespace}u-pr\\+\\+    { padding-right:     $inuit-padding--huge !important; }\n    .#{$inuit-spacing-namespace}u-pb\\+\\+    { padding-bottom:    $inuit-padding--huge !important; }\n    .#{$inuit-spacing-namespace}u-pl\\+\\+    { padding-left:      $inuit-padding--huge !important; }\n    .#{$inuit-spacing-namespace}u-ph\\+\\+    { padding-right:     $inuit-padding--huge !important; padding-left:    $inuit-padding--huge !important; }\n    .#{$inuit-spacing-namespace}u-pv\\+\\+    { padding-top:       $inuit-padding--huge !important; padding-bottom:  $inuit-padding--huge !important; }\n\n}\n\n\n@if ($inuit-enable-paddings--none == true) {\n\n    /**\n     * Remove paddings.\n     */\n\n    .#{$inuit-spacing-namespace}u-p0    { padding:          0 !important; }\n    .#{$inuit-spacing-namespace}u-pt0   { padding-top:      0 !important; }\n    .#{$inuit-spacing-namespace}u-pr0   { padding-right:    0 !important; }\n    .#{$inuit-spacing-namespace}u-pb0   { padding-bottom:   0 !important; }\n    .#{$inuit-spacing-namespace}u-pl0   { padding-left:     0 !important; }\n    .#{$inuit-spacing-namespace}u-ph0   { padding-right:    0 !important; padding-left:     0 !important; }\n    .#{$inuit-spacing-namespace}u-pv0   { padding-top:      0 !important; padding-bottom:   0 !important; }\n\n}\n","/*------------------------------------*\\\n    #SPACING-RESPONSIVE\n\\*------------------------------------*/\n\n/**\n * Margin and padding helper classes. Use these to tweak layout on a micro\n * level.\n *\n * `.(m|p)(t|r|b|l|h|v)(-|+|0) {}` = margin/padding top/right/bottom/left/horizontal/vertical less/more/none\n */\n\n// Predefine the variables below in order to alter and enable specific features.\n$inuit-enable-responsive-margins:                   false !default;\n$inuit-enable-responsive-margins--tiny:             false !default;\n$inuit-enable-responsive-margins--small:            false !default;\n$inuit-enable-responsive-margins--large:            false !default;\n$inuit-enable-responsive-margins--huge:             false !default;\n\n$inuit-enable-responsive-margins--negative:         false !default;\n$inuit-enable-responsive-margins--negative-tiny:    false !default;\n$inuit-enable-responsive-margins--negative-small:   false !default;\n$inuit-enable-responsive-margins--negative-large:   false !default;\n$inuit-enable-responsive-margins--negative-huge:    false !default;\n\n$inuit-enable-responsive-margins--none:             false !default;\n\n$inuit-enable-responsive-paddings:                  false !default;\n$inuit-enable-responsive-paddings--tiny:            false !default;\n$inuit-enable-responsive-paddings--small:           false !default;\n$inuit-enable-responsive-paddings--large:           false !default;\n$inuit-enable-responsive-paddings--huge:            false !default;\n\n$inuit-enable-responsive-paddings--none:            false !default;\n\n\n\n\n\n// Internally used mixin to quickly generate our different variants based upon\n// the breakpoints defined in `settings.responsive`.\n\n@mixin inuit-generate-spacing() {\n\n    // Loop through our previously-defined breakpoints.\n    @each $breakpoint in $breakpoints {\n\n        $inuit-generate-spacing-alias:      nth($breakpoint, 1) !global;\n        $inuit-generate-spacing-condition:  nth($breakpoint, 2);\n\n        // This isn’t ideal, but we definitely don’t want to generate widths\n        // for retina devices. Exclude retina media-qeuries manually.\n        @if ($inuit-generate-spacing-alias != \"retina\") {\n    \n            @include media-query($inuit-generate-spacing-alias) {\n                @content;\n            } // Close media query.\n\n        } // Close retina check.\n\n        // Take the global variable back out of scope.\n        $inuit-generate-spacing-alias: null !global;\n\n    } // Close breakpoints loop.\n\n}\n\n\n\n\n\n@if ($inuit-enable-responsive-margins == true) {\n\n    /**\n     * Margin helper classes.\n     *\n     * Add margins.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-m-#{$inuit-generate-spacing-alias}     \t{ margin:           $inuit-margin !important; }\n        .#{$inuit-spacing-namespace}u-mt-#{$inuit-generate-spacing-alias}    \t{ margin-top:       $inuit-margin !important; }\n        .#{$inuit-spacing-namespace}u-mr-#{$inuit-generate-spacing-alias}    \t{ margin-right:     $inuit-margin !important; }\n        .#{$inuit-spacing-namespace}u-mb-#{$inuit-generate-spacing-alias}    \t{ margin-bottom:    $inuit-margin !important; }\n        .#{$inuit-spacing-namespace}u-ml-#{$inuit-generate-spacing-alias}    \t{ margin-left:      $inuit-margin !important; }\n        .#{$inuit-spacing-namespace}u-mh-#{$inuit-generate-spacing-alias}    \t{ margin-right:     $inuit-margin !important; margin-left:      $inuit-margin !important; }\n        .#{$inuit-spacing-namespace}u-mv-#{$inuit-generate-spacing-alias}    \t{ margin-top:       $inuit-margin !important; margin-bottom:    $inuit-margin !important; }\n\n    }\n\n}\n\n\n@if ($inuit-enable-responsive-margins--tiny == true) {\n\n    /**\n     * Add tiny margins.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-m---#{$inuit-generate-spacing-alias}    \t{ margin:           $inuit-margin--tiny !important; }\n        .#{$inuit-spacing-namespace}u-mt---#{$inuit-generate-spacing-alias}   \t{ margin-top:       $inuit-margin--tiny !important; }\n        .#{$inuit-spacing-namespace}u-mr---#{$inuit-generate-spacing-alias}   \t{ margin-right:     $inuit-margin--tiny !important; }\n        .#{$inuit-spacing-namespace}u-mb---#{$inuit-generate-spacing-alias}   \t{ margin-bottom:    $inuit-margin--tiny !important; }\n        .#{$inuit-spacing-namespace}u-ml---#{$inuit-generate-spacing-alias}   \t{ margin-left:      $inuit-margin--tiny !important; }\n        .#{$inuit-spacing-namespace}u-mh---#{$inuit-generate-spacing-alias}   \t{ margin-right:     $inuit-margin--tiny !important; margin-left:     $inuit-margin--tiny !important; }\n        .#{$inuit-spacing-namespace}u-mv---#{$inuit-generate-spacing-alias}   \t{ margin-top:       $inuit-margin--tiny !important; margin-bottom:   $inuit-margin--tiny !important; }\n\n    }\n\n}\n\n\n@if ($inuit-enable-responsive-margins--small == true) {\n\n    /**\n     * Add small margins.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-m--#{$inuit-generate-spacing-alias}     \t{ margin:           $inuit-margin--small !important; }\n        .#{$inuit-spacing-namespace}u-mt--#{$inuit-generate-spacing-alias}    \t{ margin-top:       $inuit-margin--small !important; }\n        .#{$inuit-spacing-namespace}u-mr--#{$inuit-generate-spacing-alias}    \t{ margin-right:     $inuit-margin--small !important; }\n        .#{$inuit-spacing-namespace}u-mb--#{$inuit-generate-spacing-alias}    \t{ margin-bottom:    $inuit-margin--small !important; }\n        .#{$inuit-spacing-namespace}u-ml--#{$inuit-generate-spacing-alias}    \t{ margin-left:      $inuit-margin--small !important; }\n        .#{$inuit-spacing-namespace}u-mh--#{$inuit-generate-spacing-alias}    \t{ margin-right:     $inuit-margin--small !important; margin-left:   $inuit-margin--small !important; }\n        .#{$inuit-spacing-namespace}u-mv--#{$inuit-generate-spacing-alias}    \t{ margin-top:       $inuit-margin--small !important; margin-bottom: $inuit-margin--small !important; }\n\n    }\n\n}\n\n\n@if ($inuit-enable-responsive-margins--large == true) {\n\n    /**\n     * Add large margins.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-m\\+-#{$inuit-generate-spacing-alias}    \t{ margin:           $inuit-margin--large !important; }\n        .#{$inuit-spacing-namespace}u-mt\\+-#{$inuit-generate-spacing-alias}   \t{ margin-top:       $inuit-margin--large !important; }\n        .#{$inuit-spacing-namespace}u-mr\\+-#{$inuit-generate-spacing-alias}   \t{ margin-right:     $inuit-margin--large !important; }\n        .#{$inuit-spacing-namespace}u-mb\\+-#{$inuit-generate-spacing-alias}   \t{ margin-bottom:    $inuit-margin--large !important; }\n        .#{$inuit-spacing-namespace}u-ml\\+-#{$inuit-generate-spacing-alias}   \t{ margin-left:      $inuit-margin--large !important; }\n        .#{$inuit-spacing-namespace}u-mh\\+-#{$inuit-generate-spacing-alias}   \t{ margin-right:     $inuit-margin--large !important; margin-left:      $inuit-margin--large !important; }\n        .#{$inuit-spacing-namespace}u-mv\\+-#{$inuit-generate-spacing-alias}   \t{ margin-top:       $inuit-margin--large !important; margin-bottom:    $inuit-margin--large !important; }\n\n    }\n\n}\n\n\n@if ($inuit-enable-responsive-margins--huge == true) {\n\n    /**\n     * Add huge margins.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-m\\+\\+-#{$inuit-generate-spacing-alias}  \t{ margin:           $inuit-margin--huge !important; }\n        .#{$inuit-spacing-namespace}u-mt\\+\\+-#{$inuit-generate-spacing-alias} \t{ margin-top:       $inuit-margin--huge !important; }\n        .#{$inuit-spacing-namespace}u-mr\\+\\+-#{$inuit-generate-spacing-alias} \t{ margin-right:     $inuit-margin--huge !important; }\n        .#{$inuit-spacing-namespace}u-mb\\+\\+-#{$inuit-generate-spacing-alias} \t{ margin-bottom:    $inuit-margin--huge !important; }\n        .#{$inuit-spacing-namespace}u-ml\\+\\+-#{$inuit-generate-spacing-alias} \t{ margin-left:      $inuit-margin--huge !important; }\n        .#{$inuit-spacing-namespace}u-mh\\+\\+-#{$inuit-generate-spacing-alias} \t{ margin-right:     $inuit-margin--huge !important; margin-left:   $inuit-margin--huge !important; }\n        .#{$inuit-spacing-namespace}u-mv\\+\\+-#{$inuit-generate-spacing-alias} \t{ margin-top:       $inuit-margin--huge !important; margin-bottom: $inuit-margin--huge !important; }\n\n    }\n\n}\n\n\n@if ($inuit-enable-responsive-margins--none == true) {\n\n    /**\n     * Remove margins.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-m0      \t{ margin:           0 !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-mt0     \t{ margin-top:       0 !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-mr0     \t{ margin-right:     0 !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-mb0     \t{ margin-bottom:    0 !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-ml0     \t{ margin-left:      0 !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-mh0     \t{ margin-right:     0 !important; margin-left:      0 !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-mv0     \t{ margin-top:       0 !important; margin-bottom:    0 !important; }\n\n    }\n\n}\n\n\n@if ($inuit-enable-responsive-margins--negative == true) {\n\n    /**\n     * Negative margins.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--m      \t{ margin:           -$inuit-margin !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mt     \t{ margin-top:       -$inuit-margin !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mr     \t{ margin-right:     -$inuit-margin !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mb     \t{ margin-bottom:    -$inuit-margin !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--ml     \t{ margin-left:      -$inuit-margin !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mh     \t{ margin-right:     -$inuit-margin !important; margin-left:      -$inuit-margin !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mv     \t{ margin-top:       -$inuit-margin !important; margin-bottom:    -$inuit-margin !important; }\n\n    }\n\n}\n\n\n@if ($inuit-enable-responsive-margins--negative-tiny == true) {\n\n    /**\n     * Tiny negative margins.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--m--    \t{ margin:           -$inuit-margin--tiny !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mt--   \t{ margin-top:       -$inuit-margin--tiny !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mr--   \t{ margin-right:     -$inuit-margin--tiny !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mb--   \t{ margin-bottom:    -$inuit-margin--tiny !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--ml--   \t{ margin-left:      -$inuit-margin--tiny !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mh--   \t{ margin-right:     -$inuit-margin--tiny !important; margin-left:     -$inuit-margin--tiny !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mv--   \t{ margin-top:       -$inuit-margin--tiny !important; margin-bottom:   -$inuit-margin--tiny !important; }\n\n    }\n\n}\n\n\n@if ($inuit-enable-responsive-margins--negative-small == true) {\n\n    /**\n     * Small negative margins.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--m-     \t{ margin:           -$inuit-margin--small !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mt-    \t{ margin-top:       -$inuit-margin--small !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mr-    \t{ margin-right:     -$inuit-margin--small !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mb-    \t{ margin-bottom:    -$inuit-margin--small !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--ml-    \t{ margin-left:      -$inuit-margin--small !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mh-    \t{ margin-right:     -$inuit-margin--small !important; margin-left:   -$inuit-margin--small !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mv-    \t{ margin-top:       -$inuit-margin--small !important; margin-bottom: -$inuit-margin--small !important; }\n\n    }\n\n}\n\n\n@if ($inuit-enable-responsive-margins--negative-large == true) {\n\n    /**\n     * Large negative margins.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--m\\+    \t{ margin:           double(-$inuit-margin) !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mt\\+   \t{ margin-top:       double(-$inuit-margin) !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mr\\+   \t{ margin-right:     double(-$inuit-margin) !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mb\\+   \t{ margin-bottom:    double(-$inuit-margin) !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--ml\\+   \t{ margin-left:      double(-$inuit-margin) !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mh\\+   \t{ margin-right:     double(-$inuit-margin) !important; margin-left:      double(-$inuit-margin) !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mv\\+    { margin-top:       double(-$inuit-margin) !important; margin-bottom:    double(-$inuit-margin) !important; }\n\n    }\n\n}\n\n\n@if ($inuit-enable-responsive-margins--negative-huge == true) {\n\n    /**\n     * Huge negative margins.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--m\\+\\+  \t{ margin:           quadruple(-$inuit-margin) !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mt\\+\\+ \t{ margin-top:       quadruple(-$inuit-margin) !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mr\\+\\+ \t{ margin-right:     quadruple(-$inuit-margin) !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mb\\+\\+ \t{ margin-bottom:    quadruple(-$inuit-margin) !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--ml\\+\\+ \t{ margin-left:      quadruple(-$inuit-margin) !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mh\\+\\+ \t{ margin-right:     quadruple(-$inuit-margin) !important; margin-left:   quadruple(-$inuit-margin) !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}--mv\\+\\+ \t{ margin-top:       quadruple(-$inuit-margin) !important; margin-bottom: quadruple(-$inuit-margin) !important; }\n\n    }\n\n}\n\n\n\n\n\n@if ($inuit-enable-responsive-paddings == true) {\n\n    /**\n     * Padding helper classes.\n     *\n     * Add paddings.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-p       { padding:          $inuit-padding !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pt      { padding-top:      $inuit-padding !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pr      { padding-right:    $inuit-padding !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pb      { padding-bottom:   $inuit-padding !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pl      { padding-left:     $inuit-padding !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-ph      { padding-right:    $inuit-padding !important; padding-left:    $inuit-padding !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pv      { padding-top:      $inuit-padding !important; padding-bottom:  $inuit-padding !important; }\n\n    }\n\n}\n\n\n@if ($inuit-enable-responsive-paddings--tiny == true) {\n\n    /**\n     * Add tiny paddings.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-p--     { padding:           $inuit-padding--tiny !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pt--    { padding-top:       $inuit-padding--tiny !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pr--    { padding-right:     $inuit-padding--tiny !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pb--    { padding-bottom:    $inuit-padding--tiny !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pl--    { padding-left:      $inuit-padding--tiny !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-ph--    { padding-right:     $inuit-padding--tiny !important; padding-left:      $inuit-padding--tiny !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pv--    { padding-top:       $inuit-padding--tiny !important; padding-bottom:    $inuit-padding--tiny !important; }\n\n    }\n\n}\n\n\n@if ($inuit-enable-responsive-paddings--small == true) {\n\n    /**\n     * Add small paddings.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-p-      { padding:           $inuit-padding--small !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pt-     { padding-top:       $inuit-padding--small !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pr-     { padding-right:     $inuit-padding--small !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pb-     { padding-bottom:    $inuit-padding--small !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pl-     { padding-left:      $inuit-padding--small !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-ph-     { padding-right:     $inuit-padding--small !important; padding-left:    $inuit-padding--small !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pv-     { padding-top:       $inuit-padding--small !important; padding-bottom:  $inuit-padding--small !important; }\n\n    }\n\n}\n\n\n@if ($inuit-enable-responsive-paddings--large == true) {\n\n    /**\n     * Add large paddings.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-p\\+     { padding:           $inuit-padding--large !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pt\\+    { padding-top:       $inuit-padding--large !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pr\\+    { padding-right:     $inuit-padding--large !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pb\\+    { padding-bottom:    $inuit-padding--large !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pl\\+    { padding-left:      $inuit-padding--large !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-ph\\+    { padding-right:     $inuit-padding--large !important; padding-left:   $inuit-padding--large !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pv\\+    { padding-top:       $inuit-padding--large !important; padding-bottom: $inuit-padding--large !important; }\n\n    }\n\n}\n\n\n@if ($inuit-enable-responsive-paddings--huge == true) {\n\n    /**\n     * Add huge paddings.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-p\\+\\+   { padding:           $inuit-padding--huge !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pt\\+\\+  { padding-top:       $inuit-padding--huge !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pr\\+\\+  { padding-right:     $inuit-padding--huge !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pb\\+\\+  { padding-bottom:    $inuit-padding--huge !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pl\\+\\+  { padding-left:      $inuit-padding--huge !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-ph\\+\\+  { padding-right:     $inuit-padding--huge !important; padding-left:    $inuit-padding--huge !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pv\\+\\+  { padding-top:       $inuit-padding--huge !important; padding-bottom:  $inuit-padding--huge !important; }\n\n    }\n\n}\n\n\n@if ($inuit-enable-responsive-paddings--none == true) {\n\n    /**\n     * Remove paddings.\n     */\n\n    @include inuit-generate-spacing() {\n\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-p0      { padding:          0 !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pt0     { padding-top:      0 !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pr0     { padding-right:    0 !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pb0     { padding-bottom:   0 !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pl0     { padding-left:     0 !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-ph0     { padding-right:    0 !important; padding-left:     0 !important; }\n        .#{$inuit-spacing-namespace}u-#{$inuit-generate-spacing-alias}-pv0     { padding-top:      0 !important; padding-bottom:   0 !important; }\n\n    }\n\n}\n","/*------------------------------------*\\\n    #WIDTHS\n\\*------------------------------------*/\n\n/**\n * A series of width helper classes that you can use to size things like grid\n * systems. Classes can take a fraction-like format (e.g. `.u-2/3`) or a spoken-\n * word format (e.g. `.u-2-of-3`). Use these in your markup:\n *\n * <div class=\"u-7/12\">\n */\n\n// By default we will create wholes, halves, thirds, quarters, and fifths.\n// Predefine this Map to override.\n$inuit-widths-columns: (\n    1,\n    2,\n    3,\n    4,\n    5,\n) !default;\n\n@include inuit-widths($inuit-widths-columns);\n","///*------------------------------------*\\\r\n//    #WIDTHS\r\n//\\*------------------------------------*/\r\n\r\n// A mixin to spit out our width classes. Pass in the columns we want the widths\r\n// to have, and an optional suffix for responsive widths. E.g. to create thirds\r\n// and quarters for a small breakpoint:\r\n//\r\n// @include inuit-widths(3 4, -sm);\r\n\r\n// Predefine the variables below in order to alter and enable specific features.\r\n$inuit-widths-namespace: $inuit-namespace !default;\r\n\r\n// Do we want to use classes like `<div class=\"u-1/4\">` instead of\r\n// `<div class=\"u-1-of-4\">`?\r\n$inuit-use-fractions: true !default;\r\n\r\n// Depending on what we chose for `$inuit-use-fractions`, create the relevant\r\n// delimiter.\r\n@if ($inuit-use-fractions == true) {\r\n    $inuit-widths-delimiter: \\/ !global;\r\n} @else {\r\n    $inuit-widths-delimiter: -of- !global;\r\n}\r\n\r\n@mixin inuit-widths($inuit-widths-columns, $inuit-widths-breakpoint: null) {\r\n\r\n    // Loop through the number of columns for each denominator of our fractions.\r\n    @each $inuit-widths-denominator in $inuit-widths-columns {\r\n\r\n        // If we’re trying to make wholes, just spit a 100% width utility out\r\n        // one time only.\r\n        @if ($inuit-widths-denominator == 1) {\r\n            .#{$inuit-widths-namespace}u-1#{$inuit-widths-delimiter}1#{$inuit-widths-breakpoint} {\r\n                width: 100% !important;\r\n            }\r\n        } @else {\r\n\r\n            // Begin creating a numberator for our fraction up until we hit the\r\n            // denominator.\r\n            @for $inuit-widths-numerator from 1 to $inuit-widths-denominator {\r\n\r\n                // Build a class in the format `.u-3/4` or `.u-3-of-4`.\r\n                .#{$inuit-widths-namespace}u-#{$inuit-widths-numerator}#{$inuit-widths-delimiter}#{$inuit-widths-denominator}#{$inuit-widths-breakpoint} {\r\n                    width: ($inuit-widths-numerator / $inuit-widths-denominator) * 100% !important;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","/*------------------------------------*\\\n    #WIDTHS-RESPONSIVE\n\\*------------------------------------*/\n\n/**\n * Responsive width classes based on your responsive settings.\n */\n\n// By default we will create wholes, halves, thirds, quarters, and fifths.\n// Predefine this Map to override.\n$inuit-widths-columns-responsive: (\n    1,\n    2,\n    3,\n    4,\n    5,\n) !default;\n\n// Loop over our breakpoints defined in _settings.responsive.scss\n@each $breakpoint in $breakpoints {\n\n  // Get the name of the breakpoint.\n  $alias: nth($breakpoint, 1);\n\n  @include media-query($alias) {\n\n    // Loop through each of our column sizes and generate its responsive width\n    // classes.\n    @each $inuit-widths-column in $inuit-widths-columns-responsive {\n      @include inuit-widths($inuit-widths-column, -#{$alias});\n    }\n\n  }\n\n}\n","///*------------------------------------*\\\n//    #TOOLS-RESPONSIVE\n//\\*------------------------------------*/\n\n// Here we set a variable assuming that responsive settings are not set\n// globally. If they have been previously been defined, the following variable\n// will be overriden and will be set to `true`.\n$inuit-responsive-settings: false !default;\n\n@if ($inuit-responsive-settings == false) {\n    @warn \"Oops! Have you included a responsive settings file?\"\n}\n\n\n\n\n\n// A simple mixin to quickly generate whole media queries from the aliases and\n// conditions defined in `_settings.responsive.scss`.\n//\n// Usage:\n//\n// .foo {\n//     color: green;\n//\n//     @include media-query(palm) {\n//         color: red;\n//     }\n//\n// }\n\n@mixin media-query($mq) {\n\n    $breakpoint-found: false;\n\n    // Loop through the list of breakpoints we’ve provided in our settings file.\n    @each $breakpoint in $breakpoints {\n\n        // Grab the alias and the condition from their respective locations in\n        // the list.\n        $alias:     nth($breakpoint, 1);\n        $condition: nth($breakpoint, 2);\n\n        // If the media query we’ve specified has an alias and a condition...\n        @if $mq == $alias and $condition {\n\n            // ...tell the mixin that we’ve found it...\n            $breakpoint-found: true;\n\n            // ...and spit it out here.\n            @media #{$condition} {\n                @content;\n            }\n\n        }\n\n    }\n\n    // If the user specifies a non-exitent alias, send them a warning.\n    @if $breakpoint-found == false{\n        @warn \"Oops! Breakpoint ‘#{$mq}’ does not exist.\"\n    }\n\n}\n","/*------------------------------------*\\\n    #CLEARFIX\n\\*------------------------------------*/\n\n/**\n * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php\n * Extend the clearfix class with Sass to avoid the `.clearfix` class appearing\n * over and over in your markup.\n */\n.clearfix,\n%clearfix {\n\n    &:after {\n        content: \"\";\n        display: table;\n        clear: both;\n    }\n\n}\n"]}